//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:39:09 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITMiniDSTWriterDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TMiniDSTWriterDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TMiniDSTWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMiniDSTWriter(void *p = 0);
   static void *newArray_TMiniDSTWriter(Long_t size, void *p);
   static void delete_TMiniDSTWriter(void *p);
   static void deleteArray_TMiniDSTWriter(void *p);
   static void destruct_TMiniDSTWriter(void *p);
   static void streamer_TMiniDSTWriter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TMiniDSTWriter*)
   {
      ::TMiniDSTWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMiniDSTWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMiniDSTWriter", ::TMiniDSTWriter::Class_Version(), "./TMiniDSTWriter.h", 28,
                  typeid(::TMiniDSTWriter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TMiniDSTWriter::Dictionary, isa_proxy, 0,
                  sizeof(::TMiniDSTWriter) );
      instance.SetNew(&new_TMiniDSTWriter);
      instance.SetNewArray(&newArray_TMiniDSTWriter);
      instance.SetDelete(&delete_TMiniDSTWriter);
      instance.SetDeleteArray(&deleteArray_TMiniDSTWriter);
      instance.SetDestructor(&destruct_TMiniDSTWriter);
      instance.SetStreamerFunc(&streamer_TMiniDSTWriter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TMiniDSTWriter*)
   {
      return GenerateInitInstanceLocal((::TMiniDSTWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMiniDSTWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TMiniDSTWriter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TMiniDSTWriter::Class_Name()
{
   return "TMiniDSTWriter";
}

//______________________________________________________________________________
const char *TMiniDSTWriter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMiniDSTWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMiniDSTWriter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMiniDSTWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMiniDSTWriter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMiniDSTWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMiniDSTWriter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMiniDSTWriter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TMiniDSTWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMiniDSTWriter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fDSTFile;
      R__b >> fEventTree;
      R__b >> fEventHeader;
      fcaPARTStore->Streamer(R__b);
      fcaGSIMStore->Streamer(R__b);
      R__b >> fbElectron;
      R__b >> fbProton;
      R__b >> nPARTStore;
      R__b >> nGSIMStore;
      R__b >> fCompression;
      R__b >> brHeader;
      R__b >> brPART;
      R__b >> brGSIM;
      R__b >> brElectron;
      R__b >> brProton;
      R__b.CheckByteCount(R__s, R__c, TMiniDSTWriter::IsA());
   } else {
      R__c = R__b.WriteVersion(TMiniDSTWriter::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fDSTFile;
      R__b << fEventTree;
      R__b << fEventHeader;
      fcaPARTStore->Streamer(R__b);
      fcaGSIMStore->Streamer(R__b);
      R__b << fbElectron;
      R__b << fbProton;
      R__b << nPARTStore;
      R__b << nGSIMStore;
      R__b << fCompression;
      R__b << brHeader;
      R__b << brPART;
      R__b << brGSIM;
      R__b << brElectron;
      R__b << brProton;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TMiniDSTWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMiniDSTWriter.
      TClass *R__cl = ::TMiniDSTWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDSTFile", &fDSTFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventTree", &fEventTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventHeader", &fEventHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcaPARTStore", &fcaPARTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcaGSIMStore", &fcaGSIMStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fbElectron", &fbElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fbProton", &fbProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPARTStore", &nPARTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nGSIMStore", &nGSIMStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCompression", &fCompression);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brHeader", &brHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brPART", &brPART);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brGSIM", &brGSIM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brElectron", &brElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brProton", &brProton);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TMiniDSTWriter(void *p) {
      return  p ? new(p) ::TMiniDSTWriter : new ::TMiniDSTWriter;
   }
   static void *newArray_TMiniDSTWriter(Long_t nElements, void *p) {
      return p ? new(p) ::TMiniDSTWriter[nElements] : new ::TMiniDSTWriter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMiniDSTWriter(void *p) {
      delete ((::TMiniDSTWriter*)p);
   }
   static void deleteArray_TMiniDSTWriter(void *p) {
      delete [] ((::TMiniDSTWriter*)p);
   }
   static void destruct_TMiniDSTWriter(void *p) {
      typedef ::TMiniDSTWriter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TMiniDSTWriter(TBuffer &buf, void *obj) {
      ((::TMiniDSTWriter*)obj)->::TMiniDSTWriter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TMiniDSTWriter

/********************************************************
* dicts/Linux64RHEL7/TMiniDSTWriterDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTMiniDSTWriterDict();

extern "C" void G__set_cpp_environmentTMiniDSTWriterDict() {
  G__cpp_reset_tagtableTMiniDSTWriterDict();
}
#include <new>
extern "C" int G__cpp_dllrevTMiniDSTWriterDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMiniDSTWriter */
static int G__TMiniDSTWriterDict_569_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMiniDSTWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMiniDSTWriter[n];
     } else {
       p = new((void*) gvp) TMiniDSTWriter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMiniDSTWriter;
     } else {
       p = new((void*) gvp) TMiniDSTWriter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->SetCompression((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TMiniDSTWriter*) G__getstructoffset())->OpenFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TMiniDSTWriter*) G__getstructoffset())->OpenFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->WriteEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->CloseFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->Init_Clones();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->ClearClones();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->Init_Branches();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->SetHeader((TMiniHEADClass*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->SetElectron((TMiniDSTClass*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->SetProton((TMiniDSTClass*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->AddParticle((TMiniDSTClass*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->AddGSIMParticle((TGSIMClass*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMiniDSTWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMiniDSTWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMiniDSTWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMiniDSTWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMiniDSTWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMiniDSTWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMiniDSTWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMiniDSTWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMiniDSTWriterDict_569_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMiniDSTWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TMiniDSTWriterDict_569_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMiniDSTWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMiniDSTWriter(*(TMiniDSTWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMiniDSTWriter G__TTMiniDSTWriter;
static int G__TMiniDSTWriterDict_569_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMiniDSTWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMiniDSTWriter*) (soff+(sizeof(TMiniDSTWriter)*i)))->~G__TTMiniDSTWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMiniDSTWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMiniDSTWriter*) (soff))->~G__TTMiniDSTWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TMiniDSTWriterDict_569_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMiniDSTWriter* dest = (TMiniDSTWriter*) G__getstructoffset();
   *dest = *(TMiniDSTWriter*) libp->para[0].ref;
   const TMiniDSTWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMiniDSTWriter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTMiniDSTWriterDict {
 public:
  G__Sizep2memfuncTMiniDSTWriterDict(): p(&G__Sizep2memfuncTMiniDSTWriterDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTMiniDSTWriterDict::*p)();
};

size_t G__get_sizep2memfuncTMiniDSTWriterDict()
{
  G__Sizep2memfuncTMiniDSTWriterDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTMiniDSTWriterDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter))) {
     TMiniDSTWriter *G__Lderived;
     G__Lderived=(TMiniDSTWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter),G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTMiniDSTWriterDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMiniDSTWriter */
static void G__setup_memvarTMiniDSTWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter));
   { TMiniDSTWriter *p; p=(TMiniDSTWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fDSTFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TFile),-1,-1,1,"fDSTFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TTree),-1,-1,1,"fEventTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventHeader)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniHEADClass),-1,-1,1,"fEventHeader=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fcaPARTStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TClonesArray),-1,-1,1,"fcaPARTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fcaGSIMStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TClonesArray),-1,-1,1,"fcaGSIMStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fbElectron)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTClass),-1,-1,1,"fbElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fbProton)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTClass),-1,-1,1,"fbProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nPARTStore)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nPARTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nGSIMStore)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nGSIMStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCompression)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCompression=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brHeader)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TBranch),-1,-1,1,"brHeader=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brPART)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TBranch),-1,-1,1,"brPART=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brGSIM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TBranch),-1,-1,1,"brGSIM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brElectron)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TBranch),-1,-1,1,"brElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brProton)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TBranch),-1,-1,1,"brProton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTMiniDSTWriterDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMiniDSTWriter(void) {
   /* TMiniDSTWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter));
   G__memfunc_setup("TMiniDSTWriter",1353,G__TMiniDSTWriterDict_569_0_1, 105, G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCompression",1470,G__TMiniDSTWriterDict_569_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFile",786,G__TMiniDSTWriterDict_569_0_3, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - filename C - - 10 '\"UNTITLED\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__TMiniDSTWriterDict_569_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteEvent",1037,G__TMiniDSTWriterDict_569_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseFile",886,G__TMiniDSTWriterDict_569_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init_Clones",1111,G__TMiniDSTWriterDict_569_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearClones",1099,G__TMiniDSTWriterDict_569_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init_Branches",1305,G__TMiniDSTWriterDict_569_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__TMiniDSTWriterDict_569_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMiniHEADClass' - 0 - tc_header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetElectron",1128,G__TMiniDSTWriterDict_569_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMiniDSTClass' - 0 - tc_elec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProton",942,G__TMiniDSTWriterDict_569_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMiniDSTClass' - 0 - tc_prot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticle",1085,G__TMiniDSTWriterDict_569_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMiniDSTClass' - 0 - tc_part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGSIMParticle",1389,G__TMiniDSTWriterDict_569_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGSIMClass' - 0 - tc_part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TMiniDSTWriterDict_569_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStat",937,G__TMiniDSTWriterDict_569_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TMiniDSTWriterDict_569_0_17, 85, G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMiniDSTWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TMiniDSTWriterDict_569_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMiniDSTWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TMiniDSTWriterDict_569_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMiniDSTWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TMiniDSTWriterDict_569_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMiniDSTWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TMiniDSTWriterDict_569_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TMiniDSTWriterDict_569_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMiniDSTWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TMiniDSTWriterDict_569_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMiniDSTWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TMiniDSTWriterDict_569_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMiniDSTWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TMiniDSTWriterDict_569_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMiniDSTWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMiniDSTWriter", 1353, G__TMiniDSTWriterDict_569_0_29, (int) ('i'), G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter), -1, 0, 1, 1, 1, 0, "u 'TMiniDSTWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMiniDSTWriter", 1479, G__TMiniDSTWriterDict_569_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TMiniDSTWriterDict_569_0_31, (int) ('u'), G__get_linked_tagnum(&G__TMiniDSTWriterDictLN_TMiniDSTWriter), -1, 1, 1, 1, 1, 0, "u 'TMiniDSTWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTMiniDSTWriterDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTMiniDSTWriterDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTMiniDSTWriterDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TMiniDSTWriterDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMiniDSTClass = { "TMiniDSTClass" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMiniHEADClass = { "TMiniHEADClass" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TGSIMClass = { "TGSIMClass" , 99 , -1 };
G__linked_taginfo G__TMiniDSTWriterDictLN_TMiniDSTWriter = { "TMiniDSTWriter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTMiniDSTWriterDict() {
  G__TMiniDSTWriterDictLN_TClass.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TBuffer.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMemberInspector.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TObject.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TClonesArray.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TFile.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TTree.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TBranch.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMiniDSTClass.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMiniHEADClass.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TGSIMClass.tagnum = -1 ;
  G__TMiniDSTWriterDictLN_TMiniDSTWriter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTMiniDSTWriterDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMiniDSTClass);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMiniHEADClass);
   G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TGSIMClass);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TMiniDSTWriterDictLN_TMiniDSTWriter),sizeof(TMiniDSTWriter),-1,29952,"Example of a limited DST that takes less space (writer).",G__setup_memvarTMiniDSTWriter,G__setup_memfuncTMiniDSTWriter);
}
extern "C" void G__cpp_setupTMiniDSTWriterDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTMiniDSTWriterDict()");
  G__set_cpp_environmentTMiniDSTWriterDict();
  G__cpp_setup_tagtableTMiniDSTWriterDict();

  G__cpp_setup_inheritanceTMiniDSTWriterDict();

  G__cpp_setup_typetableTMiniDSTWriterDict();

  G__cpp_setup_memvarTMiniDSTWriterDict();

  G__cpp_setup_memfuncTMiniDSTWriterDict();
  G__cpp_setup_globalTMiniDSTWriterDict();
  G__cpp_setup_funcTMiniDSTWriterDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTMiniDSTWriterDict();
  return;
}
class G__cpp_setup_initTMiniDSTWriterDict {
  public:
    G__cpp_setup_initTMiniDSTWriterDict() { G__add_setup_func("TMiniDSTWriterDict",(G__incsetup)(&G__cpp_setupTMiniDSTWriterDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTMiniDSTWriterDict() { G__remove_setup_func("TMiniDSTWriterDict"); }
};
G__cpp_setup_initTMiniDSTWriterDict G__cpp_setup_initializerTMiniDSTWriterDict;

