//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:39:12 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITDSTWriterDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TDSTWriterDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TDSTWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDSTWriter(void *p = 0);
   static void *newArray_TDSTWriter(Long_t size, void *p);
   static void delete_TDSTWriter(void *p);
   static void deleteArray_TDSTWriter(void *p);
   static void destruct_TDSTWriter(void *p);
   static void streamer_TDSTWriter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TDSTWriter*)
   {
      ::TDSTWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDSTWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDSTWriter", ::TDSTWriter::Class_Version(), "./TDSTWriter.h", 71,
                  typeid(::TDSTWriter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TDSTWriter::Dictionary, isa_proxy, 0,
                  sizeof(::TDSTWriter) );
      instance.SetNew(&new_TDSTWriter);
      instance.SetNewArray(&newArray_TDSTWriter);
      instance.SetDelete(&delete_TDSTWriter);
      instance.SetDeleteArray(&deleteArray_TDSTWriter);
      instance.SetDestructor(&destruct_TDSTWriter);
      instance.SetStreamerFunc(&streamer_TDSTWriter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TDSTWriter*)
   {
      return GenerateInitInstanceLocal((::TDSTWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDSTWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TDSTWriter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TDSTWriter::Class_Name()
{
   return "TDSTWriter";
}

//______________________________________________________________________________
const char *TDSTWriter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TDSTWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDSTWriter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TDSTWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDSTWriter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TDSTWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDSTWriter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TDSTWriter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TDSTWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDSTWriter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fDSTFile;
      R__b >> fEventTree;
      fcaPARTStore->Streamer(R__b);
      R__b >> nPARTStore;
      R__b >> fCompression;
      EVNTStore->Streamer(R__b);
      ECPBStore->Streamer(R__b);
      SCPBStore->Streamer(R__b);
      DCPBStore->Streamer(R__b);
      CCPBStore->Streamer(R__b);
      ICPBStore->Streamer(R__b);
      ICHBStore->Streamer(R__b);
      FBPMStore->Streamer(R__b);
      LCPBStore->Streamer(R__b);
      STPBStore->Streamer(R__b);
      TGPBStore->Streamer(R__b);
      TAGRStore->Streamer(R__b);
      VERTStore->Streamer(R__b);
      MVRTStore->Streamer(R__b);
      TBERStore->Streamer(R__b);
      TGBIStore->Streamer(R__b);
      GSIMStore->Streamer(R__b);
      R__b >> brHeader;
      R__b >> brPART;
      R__b >> brElectron;
      R__b >> brProton;
      fClones.Streamer(R__b);
      fScalerClones.Streamer(R__b);
      R__b >> hHEADER;
      R__b >> HEADERBranch;
      R__b >> EVNTBranch;
      R__b >> nEVNT_Store;
      R__b >> ECPBBranch;
      R__b >> nECPB_Store;
      R__b >> SCPBBranch;
      R__b >> nSCPB_Store;
      R__b >> DCPBBranch;
      R__b >> nDCPB_Store;
      R__b >> CCPBBranch;
      R__b >> nCCPB_Store;
      R__b >> ICPBBranch;
      R__b >> nICPB_Store;
      R__b >> ICHBBranch;
      R__b >> nICHB_Store;
      R__b >> FBPMBranch;
      R__b >> nFBPM_Store;
      R__b >> LCPBBranch;
      R__b >> nLCPB_Store;
      R__b >> STPBBranch;
      R__b >> nSTPB_Store;
      R__b >> TGPBBranch;
      R__b >> nTGPB_Store;
      R__b >> TAGRBranch;
      R__b >> nTAGR_Store;
      R__b >> VERTBranch;
      R__b >> nVERT_Store;
      R__b >> MVRTBranch;
      R__b >> nMVRT_Store;
      R__b >> TBERBranch;
      R__b >> nTBER_Store;
      R__b >> TGBIBranch;
      R__b >> nTGBI_Store;
      R__b >> GSIMBranch;
      R__b >> nGSIM_Store;
      R__b.CheckByteCount(R__s, R__c, TDSTWriter::IsA());
   } else {
      R__c = R__b.WriteVersion(TDSTWriter::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fDSTFile;
      R__b << fEventTree;
      fcaPARTStore->Streamer(R__b);
      R__b << nPARTStore;
      R__b << fCompression;
      EVNTStore->Streamer(R__b);
      ECPBStore->Streamer(R__b);
      SCPBStore->Streamer(R__b);
      DCPBStore->Streamer(R__b);
      CCPBStore->Streamer(R__b);
      ICPBStore->Streamer(R__b);
      ICHBStore->Streamer(R__b);
      FBPMStore->Streamer(R__b);
      LCPBStore->Streamer(R__b);
      STPBStore->Streamer(R__b);
      TGPBStore->Streamer(R__b);
      TAGRStore->Streamer(R__b);
      VERTStore->Streamer(R__b);
      MVRTStore->Streamer(R__b);
      TBERStore->Streamer(R__b);
      TGBIStore->Streamer(R__b);
      GSIMStore->Streamer(R__b);
      R__b << brHeader;
      R__b << brPART;
      R__b << brElectron;
      R__b << brProton;
      fClones.Streamer(R__b);
      fScalerClones.Streamer(R__b);
      R__b << hHEADER;
      R__b << HEADERBranch;
      R__b << EVNTBranch;
      R__b << nEVNT_Store;
      R__b << ECPBBranch;
      R__b << nECPB_Store;
      R__b << SCPBBranch;
      R__b << nSCPB_Store;
      R__b << DCPBBranch;
      R__b << nDCPB_Store;
      R__b << CCPBBranch;
      R__b << nCCPB_Store;
      R__b << ICPBBranch;
      R__b << nICPB_Store;
      R__b << ICHBBranch;
      R__b << nICHB_Store;
      R__b << FBPMBranch;
      R__b << nFBPM_Store;
      R__b << LCPBBranch;
      R__b << nLCPB_Store;
      R__b << STPBBranch;
      R__b << nSTPB_Store;
      R__b << TGPBBranch;
      R__b << nTGPB_Store;
      R__b << TAGRBranch;
      R__b << nTAGR_Store;
      R__b << VERTBranch;
      R__b << nVERT_Store;
      R__b << MVRTBranch;
      R__b << nMVRT_Store;
      R__b << TBERBranch;
      R__b << nTBER_Store;
      R__b << TGBIBranch;
      R__b << nTGBI_Store;
      R__b << GSIMBranch;
      R__b << nGSIM_Store;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDSTWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDSTWriter.
      TClass *R__cl = ::TDSTWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDSTFile", &fDSTFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventTree", &fEventTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcaPARTStore", &fcaPARTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPARTStore", &nPARTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCompression", &fCompression);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EVNTStore", &EVNTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ECPBStore", &ECPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCPBStore", &SCPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DCPBStore", &DCPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CCPBStore", &CCPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ICPBStore", &ICPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ICHBStore", &ICHBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FBPMStore", &FBPMStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LCPBStore", &LCPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*STPBStore", &STPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TGPBStore", &TGPBStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TAGRStore", &TAGRStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VERTStore", &VERTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MVRTStore", &MVRTStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TBERStore", &TBERStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TGBIStore", &TGBIStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GSIMStore", &GSIMStore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brHeader", &brHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brPART", &brPART);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brElectron", &brElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brProton", &brProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClones", &fClones);
      R__insp.InspectMember(fClones, "fClones.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalerClones", &fScalerClones);
      R__insp.InspectMember(fScalerClones, "fScalerClones.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHEADER", &hHEADER);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HEADERBranch", &HEADERBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EVNTBranch", &EVNTBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEVNT_Store", &nEVNT_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ECPBBranch", &ECPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nECPB_Store", &nECPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCPBBranch", &SCPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSCPB_Store", &nSCPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DCPBBranch", &DCPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nDCPB_Store", &nDCPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CCPBBranch", &CCPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCCPB_Store", &nCCPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ICPBBranch", &ICPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nICPB_Store", &nICPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ICHBBranch", &ICHBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nICHB_Store", &nICHB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FBPMBranch", &FBPMBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFBPM_Store", &nFBPM_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LCPBBranch", &LCPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nLCPB_Store", &nLCPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*STPBBranch", &STPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSTPB_Store", &nSTPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TGPBBranch", &TGPBBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTGPB_Store", &nTGPB_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TAGRBranch", &TAGRBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTAGR_Store", &nTAGR_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VERTBranch", &VERTBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nVERT_Store", &nVERT_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MVRTBranch", &MVRTBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMVRT_Store", &nMVRT_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TBERBranch", &TBERBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTBER_Store", &nTBER_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TGBIBranch", &TGBIBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTGBI_Store", &nTGBI_Store);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GSIMBranch", &GSIMBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nGSIM_Store", &nGSIM_Store);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TDSTWriter(void *p) {
      return  p ? new(p) ::TDSTWriter : new ::TDSTWriter;
   }
   static void *newArray_TDSTWriter(Long_t nElements, void *p) {
      return p ? new(p) ::TDSTWriter[nElements] : new ::TDSTWriter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDSTWriter(void *p) {
      delete ((::TDSTWriter*)p);
   }
   static void deleteArray_TDSTWriter(void *p) {
      delete [] ((::TDSTWriter*)p);
   }
   static void destruct_TDSTWriter(void *p) {
      typedef ::TDSTWriter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDSTWriter(TBuffer &buf, void *obj) {
      ((::TDSTWriter*)obj)->::TDSTWriter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TDSTWriter

/********************************************************
* dicts/Linux64RHEL7/TDSTWriterDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTDSTWriterDict();

extern "C" void G__set_cpp_environmentTDSTWriterDict() {
  G__cpp_reset_tagtableTDSTWriterDict();
}
#include <new>
extern "C" int G__cpp_dllrevTDSTWriterDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TDSTWriter */
static int G__TDSTWriterDict_802_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDSTWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSTWriter[n];
     } else {
       p = new((void*) gvp) TDSTWriter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDSTWriter;
     } else {
       p = new((void*) gvp) TDSTWriter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TDSTWriterDictLN_TDSTWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->SetCompression((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TDSTWriter*) G__getstructoffset())->OpenFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TDSTWriter*) G__getstructoffset())->OpenFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->WriteEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->CopyBanks((TVirtualReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->AddBank((const char*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->SetHeader((THEADERClass*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->CloseFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDSTWriter*) G__getstructoffset())->BankStatus((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->Init_Clones();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->ClearClones();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->Init_Branches();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->AddBankName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->AddBankList((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->ShowBanks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->PrintStat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDSTWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSTWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDSTWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDSTWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDSTWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSTWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSTWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDSTWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TDSTWriterDict_802_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDSTWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDSTWriter G__TTDSTWriter;
static int G__TDSTWriterDict_802_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDSTWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDSTWriter*) (soff+(sizeof(TDSTWriter)*i)))->~G__TTDSTWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDSTWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDSTWriter*) (soff))->~G__TTDSTWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TDSTWriter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTDSTWriterDict {
 public:
  G__Sizep2memfuncTDSTWriterDict(): p(&G__Sizep2memfuncTDSTWriterDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTDSTWriterDict::*p)();
};

size_t G__get_sizep2memfuncTDSTWriterDict()
{
  G__Sizep2memfuncTDSTWriterDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTDSTWriterDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TDSTWriterDictLN_TDSTWriter))) {
     TDSTWriter *G__Lderived;
     G__Lderived=(TDSTWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TDSTWriterDictLN_TDSTWriter),G__get_linked_tagnum(&G__TDSTWriterDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTDSTWriterDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__TDSTWriterDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TDSTWriter */
static void G__setup_memvarTDSTWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TDSTWriterDictLN_TDSTWriter));
   { TDSTWriter *p; p=(TDSTWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fDSTFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TFile),-1,-1,1,"fDSTFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TTree),-1,-1,1,"fEventTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fcaPARTStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"fcaPARTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nPARTStore)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nPARTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCompression)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCompression=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EVNTStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"EVNTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"ECPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"SCPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DCPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"DCPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CCPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"CCPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ICPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"ICPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ICHBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"ICHBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FBPMStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"FBPMStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LCPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"LCPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->STPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"STPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGPBStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"TGPBStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TAGRStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"TAGRStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VERTStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"VERTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MVRTStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"MVRTStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TBERStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"TBERStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGBIStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"TGBIStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GSIMStore)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClonesArray),-1,-1,1,"GSIMStore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brHeader)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"brHeader=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brPART)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"brPART=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brElectron)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"brElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->brProton)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"brProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fClones)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_THashList),-1,-1,1,"fClones=",0,"Store pointers to TClonesArray of main data");
   G__memvar_setup((void*)((long)(&p->fScalerClones)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_THashList),-1,-1,1,"fScalerClones=",0,"Store pointers to TClonesArray of scalers.");
   G__memvar_setup((void*)((long)(&p->hHEADER)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_THEADERClass),-1,-1,1,"hHEADER=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HEADERBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"HEADERBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EVNTBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"EVNTBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nEVNT_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nEVNT_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ECPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"ECPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nECPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nECPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"SCPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nSCPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nSCPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DCPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"DCPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nDCPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nDCPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CCPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"CCPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nCCPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nCCPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ICPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"ICPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nICPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nICPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ICHBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"ICHBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nICHB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nICHB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FBPMBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"FBPMBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nFBPM_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nFBPM_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LCPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"LCPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nLCPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nLCPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->STPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"STPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nSTPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nSTPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGPBBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"TGPBBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTGPB_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nTGPB_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TAGRBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"TAGRBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTAGR_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nTAGR_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VERTBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"VERTBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nVERT_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nVERT_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MVRTBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"MVRTBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nMVRT_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nMVRT_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TBERBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"TBERBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTBER_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nTBER_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGBIBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"TGBIBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTGBI_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nTGBI_Store=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GSIMBranch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TBranch),-1,-1,1,"GSIMBranch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nGSIM_Store)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nGSIM_Store=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TDSTWriterDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTDSTWriterDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTDSTWriter(void) {
   /* TDSTWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TDSTWriterDictLN_TDSTWriter));
   G__memfunc_setup("TDSTWriter",956,G__TDSTWriterDict_802_0_1, 105, G__get_linked_tagnum(&G__TDSTWriterDictLN_TDSTWriter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCompression",1470,G__TDSTWriterDict_802_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFile",786,G__TDSTWriterDict_802_0_3, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - filename C - - 10 '\"UNTITLED\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__TDSTWriterDict_802_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteEvent",1037,G__TDSTWriterDict_802_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyBanks",906,G__TDSTWriterDict_802_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVirtualReader' - 0 - fReader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBank",645,G__TDSTWriterDict_802_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - _bnkname U 'TObject' - 0 - _bnkptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeader",885,G__TDSTWriterDict_802_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THEADERClass' - 0 - _fHeader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseFile",886,G__TDSTWriterDict_802_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BankStatus",1024,G__TDSTWriterDict_802_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - _bnk_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init_Clones",1111,G__TDSTWriterDict_802_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearClones",1099,G__TDSTWriterDict_802_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init_Branches",1305,G__TDSTWriterDict_802_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBankName",1030,G__TDSTWriterDict_802_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - _bnkname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBankList",1057,G__TDSTWriterDict_802_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - _bnkname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowBanks",912,G__TDSTWriterDict_802_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TDSTWriterDict_802_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStat",937,G__TDSTWriterDict_802_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TDSTWriterDict_802_0_19, 85, G__get_linked_tagnum(&G__TDSTWriterDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDSTWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TDSTWriterDict_802_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSTWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TDSTWriterDict_802_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDSTWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TDSTWriterDict_802_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDSTWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TDSTWriterDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TDSTWriterDict_802_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TDSTWriterDict_802_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSTWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TDSTWriterDict_802_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSTWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TDSTWriterDict_802_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDSTWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TDSTWriterDict_802_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDSTWriter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDSTWriter", 1082, G__TDSTWriterDict_802_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTDSTWriterDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTDSTWriterDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTDSTWriterDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TDSTWriterDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_THEADERClass = { "THEADERClass" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TVirtualReader = { "TVirtualReader" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__TDSTWriterDictLN_TDSTWriter = { "TDSTWriter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTDSTWriterDict() {
  G__TDSTWriterDictLN_TClass.tagnum = -1 ;
  G__TDSTWriterDictLN_TBuffer.tagnum = -1 ;
  G__TDSTWriterDictLN_TMemberInspector.tagnum = -1 ;
  G__TDSTWriterDictLN_TObject.tagnum = -1 ;
  G__TDSTWriterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TClonesArray.tagnum = -1 ;
  G__TDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TFile.tagnum = -1 ;
  G__TDSTWriterDictLN_TTree.tagnum = -1 ;
  G__TDSTWriterDictLN_TBranch.tagnum = -1 ;
  G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__TDSTWriterDictLN_THashList.tagnum = -1 ;
  G__TDSTWriterDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__TDSTWriterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TDSTWriterDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__TDSTWriterDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TDSTWriterDictLN_THEADERClass.tagnum = -1 ;
  G__TDSTWriterDictLN_TVirtualReader.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__TDSTWriterDictLN_TDSTWriter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTDSTWriterDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_THashList);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_THEADERClass);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TVirtualReader);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TDSTWriterDictLN_TDSTWriter),sizeof(TDSTWriter),-1,29952,"Example of a limited DST that takes less space (writer).",G__setup_memvarTDSTWriter,G__setup_memfuncTDSTWriter);
}
extern "C" void G__cpp_setupTDSTWriterDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTDSTWriterDict()");
  G__set_cpp_environmentTDSTWriterDict();
  G__cpp_setup_tagtableTDSTWriterDict();

  G__cpp_setup_inheritanceTDSTWriterDict();

  G__cpp_setup_typetableTDSTWriterDict();

  G__cpp_setup_memvarTDSTWriterDict();

  G__cpp_setup_memfuncTDSTWriterDict();
  G__cpp_setup_globalTDSTWriterDict();
  G__cpp_setup_funcTDSTWriterDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTDSTWriterDict();
  return;
}
class G__cpp_setup_initTDSTWriterDict {
  public:
    G__cpp_setup_initTDSTWriterDict() { G__add_setup_func("TDSTWriterDict",(G__incsetup)(&G__cpp_setupTDSTWriterDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTDSTWriterDict() { G__remove_setup_func("TDSTWriterDict"); }
};
G__cpp_setup_initTDSTWriterDict G__cpp_setup_initializerTDSTWriterDict;

