//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:39:22 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITCounterDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TCounterDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TCounter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCounter(void *p = 0);
   static void *newArray_TCounter(Long_t size, void *p);
   static void delete_TCounter(void *p);
   static void deleteArray_TCounter(void *p);
   static void destruct_TCounter(void *p);
   static void streamer_TCounter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TCounter*)
   {
      ::TCounter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCounter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCounter", ::TCounter::Class_Version(), "./TCounter.h", 29,
                  typeid(::TCounter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TCounter::Dictionary, isa_proxy, 0,
                  sizeof(::TCounter) );
      instance.SetNew(&new_TCounter);
      instance.SetNewArray(&newArray_TCounter);
      instance.SetDelete(&delete_TCounter);
      instance.SetDeleteArray(&deleteArray_TCounter);
      instance.SetDestructor(&destruct_TCounter);
      instance.SetStreamerFunc(&streamer_TCounter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TCounter*)
   {
      return GenerateInitInstanceLocal((::TCounter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCounter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TCounter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TCounter::Class_Name()
{
   return "TCounter";
}

//______________________________________________________________________________
const char *TCounter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TCounter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCounter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TCounter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCounter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TCounter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCounter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TCounter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TCounter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCounter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fNumtrue;
      R__b >> fNumfalse;
      R__b.CheckByteCount(R__s, R__c, TCounter::IsA());
   } else {
      R__c = R__b.WriteVersion(TCounter::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fNumtrue;
      R__b << fNumfalse;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCounter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCounter.
      TClass *R__cl = ::TCounter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumtrue", &fNumtrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumfalse", &fNumfalse);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TCounter(void *p) {
      return  p ? new(p) ::TCounter : new ::TCounter;
   }
   static void *newArray_TCounter(Long_t nElements, void *p) {
      return p ? new(p) ::TCounter[nElements] : new ::TCounter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCounter(void *p) {
      delete ((::TCounter*)p);
   }
   static void deleteArray_TCounter(void *p) {
      delete [] ((::TCounter*)p);
   }
   static void destruct_TCounter(void *p) {
      typedef ::TCounter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCounter(TBuffer &buf, void *obj) {
      ((::TCounter*)obj)->::TCounter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TCounter

/********************************************************
* dicts/Linux64RHEL7/TCounterDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTCounterDict();

extern "C" void G__set_cpp_environmentTCounterDict() {
  G__cpp_reset_tagtableTCounterDict();
}
#include <new>
extern "C" int G__cpp_dllrevTCounterDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCounter */
static int G__TCounterDict_262_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCounter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCounter[n];
     } else {
       p = new((void*) gvp) TCounter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCounter;
     } else {
       p = new((void*) gvp) TCounter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TCounterDictLN_TCounter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCounter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCounter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TCounter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TCounterDictLN_TCounter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCounter*) G__getstructoffset())->SetTitle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TCounter*) G__getstructoffset())->GetTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCounter*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCounter*) G__getstructoffset())->Test((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCounter*) G__getstructoffset())->True());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCounter*) G__getstructoffset())->False());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TCounter*) G__getstructoffset())->GetTrues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TCounter*) G__getstructoffset())->GetFalse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCounter*) G__getstructoffset())->SetTrues((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCounter*) G__getstructoffset())->SetFalse((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCounter*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TCounter*) G__getstructoffset())->IsEqual((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCounter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCounter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCounter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCounter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCounter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCounter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCounter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCounter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCounterDict_262_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCounter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TCounterDict_262_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCounter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCounter(*(TCounter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TCounterDictLN_TCounter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCounter G__TTCounter;
static int G__TCounterDict_262_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCounter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCounter*) (soff+(sizeof(TCounter)*i)))->~G__TTCounter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCounter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCounter*) (soff))->~G__TTCounter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TCounterDict_262_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCounter* dest = (TCounter*) G__getstructoffset();
   *dest = *(TCounter*) libp->para[0].ref;
   const TCounter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCounter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTCounterDict {
 public:
  G__Sizep2memfuncTCounterDict(): p(&G__Sizep2memfuncTCounterDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTCounterDict::*p)();
};

size_t G__get_sizep2memfuncTCounterDict()
{
  G__Sizep2memfuncTCounterDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTCounterDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TCounterDictLN_TCounter))) {
     TCounter *G__Lderived;
     G__Lderived=(TCounter*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TCounterDictLN_TCounter),G__get_linked_tagnum(&G__TCounterDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TCounterDictLN_TCounter),G__get_linked_tagnum(&G__TCounterDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTCounterDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TCounterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TCounterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCounterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TCounterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCounterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TCounterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TCounterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCounterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TCounterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCounterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__TCounterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__TCounterDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TCounterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCounterDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TCounterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCounterDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TCounter */
static void G__setup_memvarTCounter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TCounterDictLN_TCounter));
   { TCounter *p; p=(TCounter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNumtrue)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNumtrue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNumfalse)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNumfalse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TCounterDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTCounterDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCounter(void) {
   /* TCounter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TCounterDictLN_TCounter));
   G__memfunc_setup("TCounter",820,G__TCounterDict_262_0_1, 105, G__get_linked_tagnum(&G__TCounterDictLN_TCounter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TCounter",820,G__TCounterDict_262_0_2, 105, G__get_linked_tagnum(&G__TCounterDictLN_TCounter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__TCounterDict_262_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,G__TCounterDict_262_0_4, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__TCounterDict_262_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Test",416,G__TCounterDict_262_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - test", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("True",416,G__TCounterDict_262_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("False",491,G__TCounterDict_262_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrues",819,G__TCounterDict_262_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFalse",779,G__TCounterDict_262_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrues",831,G__TCounterDict_262_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFalse",791,G__TCounterDict_262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__TCounterDict_262_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,G__TCounterDict_262_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TCounterDict_262_0_16, 85, G__get_linked_tagnum(&G__TCounterDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCounter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TCounterDict_262_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCounter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TCounterDict_262_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCounter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TCounterDict_262_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCounter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TCounterDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TCounterDict_262_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TCounterDict_262_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCounter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TCounterDict_262_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCounter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TCounterDict_262_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCounter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TCounterDict_262_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCounter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCounter", 820, G__TCounterDict_262_0_28, (int) ('i'), G__get_linked_tagnum(&G__TCounterDictLN_TCounter), -1, 0, 1, 1, 1, 0, "u 'TCounter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCounter", 946, G__TCounterDict_262_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TCounterDict_262_0_30, (int) ('u'), G__get_linked_tagnum(&G__TCounterDictLN_TCounter), -1, 1, 1, 1, 1, 0, "u 'TCounter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTCounterDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTCounterDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTCounterDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TCounterDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TCounterDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TCounterDictLN_TCounter = { "TCounter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTCounterDict() {
  G__TCounterDictLN_TClass.tagnum = -1 ;
  G__TCounterDictLN_TBuffer.tagnum = -1 ;
  G__TCounterDictLN_TMemberInspector.tagnum = -1 ;
  G__TCounterDictLN_TObject.tagnum = -1 ;
  G__TCounterDictLN_TNamed.tagnum = -1 ;
  G__TCounterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TCounterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TCounterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TCounterDictLN_TBrowser.tagnum = -1 ;
  G__TCounterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TCounterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TCounterDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__TCounterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TCounterDictLN_TCounter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTCounterDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCounterDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TCounterDictLN_TCounter),sizeof(TCounter),-1,62720,"A Counter class for simple statistics.",G__setup_memvarTCounter,G__setup_memfuncTCounter);
}
extern "C" void G__cpp_setupTCounterDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTCounterDict()");
  G__set_cpp_environmentTCounterDict();
  G__cpp_setup_tagtableTCounterDict();

  G__cpp_setup_inheritanceTCounterDict();

  G__cpp_setup_typetableTCounterDict();

  G__cpp_setup_memvarTCounterDict();

  G__cpp_setup_memfuncTCounterDict();
  G__cpp_setup_globalTCounterDict();
  G__cpp_setup_funcTCounterDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTCounterDict();
  return;
}
class G__cpp_setup_initTCounterDict {
  public:
    G__cpp_setup_initTCounterDict() { G__add_setup_func("TCounterDict",(G__incsetup)(&G__cpp_setupTCounterDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTCounterDict() { G__remove_setup_func("TCounterDict"); }
};
G__cpp_setup_initTCounterDict G__cpp_setup_initializerTCounterDict;

