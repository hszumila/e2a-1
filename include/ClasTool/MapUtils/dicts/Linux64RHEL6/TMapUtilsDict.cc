//
// File generated by /u/apps/root/5.34.13/root/bin/rootcint at Fri Jan 20 19:16:47 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL6dITMapUtilsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TMapUtilsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMapUtils_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMapUtils(void *p = 0);
   static void *newArray_TMapUtils(Long_t size, void *p);
   static void delete_TMapUtils(void *p);
   static void deleteArray_TMapUtils(void *p);
   static void destruct_TMapUtils(void *p);
   static void streamer_TMapUtils(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMapUtils*)
   {
      ::TMapUtils *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMapUtils >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMapUtils", ::TMapUtils::Class_Version(), "./TMapUtils.h", 55,
                  typeid(::TMapUtils), DefineBehavior(ptr, ptr),
                  &::TMapUtils::Dictionary, isa_proxy, 0,
                  sizeof(::TMapUtils) );
      instance.SetNew(&new_TMapUtils);
      instance.SetNewArray(&newArray_TMapUtils);
      instance.SetDelete(&delete_TMapUtils);
      instance.SetDeleteArray(&deleteArray_TMapUtils);
      instance.SetDestructor(&destruct_TMapUtils);
      instance.SetStreamerFunc(&streamer_TMapUtils);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMapUtils*)
   {
      return GenerateInitInstanceLocal((::TMapUtils*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMapUtils*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMapUtils::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMapUtils::Class_Name()
{
   return "TMapUtils";
}

//______________________________________________________________________________
const char *TMapUtils::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMapUtils*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMapUtils::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMapUtils*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMapUtils::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMapUtils*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMapUtils::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMapUtils*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMapUtils::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMapUtils.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      fHOSTNAME.Streamer(R__b);
      fDATABASE.Streamer(R__b);
      fUSERNAME.Streamer(R__b);
      fPASSWORD.Streamer(R__b);
      fRun_INDEX_Table.Streamer(R__b);
      R__b >> fDebugMode;
      fItemValueVersion.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TMapUtils::IsA());
   } else {
      R__c = R__b.WriteVersion(TMapUtils::IsA(), kTRUE);
      TObject::Streamer(R__b);
      fHOSTNAME.Streamer(R__b);
      fDATABASE.Streamer(R__b);
      fUSERNAME.Streamer(R__b);
      fPASSWORD.Streamer(R__b);
      fRun_INDEX_Table.Streamer(R__b);
      R__b << fDebugMode;
      fItemValueVersion.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TMapUtils::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMapUtils.
      TClass *R__cl = ::TMapUtils::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHOSTNAME", &fHOSTNAME);
      R__insp.InspectMember(fHOSTNAME, "fHOSTNAME.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDATABASE", &fDATABASE);
      R__insp.InspectMember(fDATABASE, "fDATABASE.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUSERNAME", &fUSERNAME);
      R__insp.InspectMember(fUSERNAME, "fUSERNAME.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPASSWORD", &fPASSWORD);
      R__insp.InspectMember(fPASSWORD, "fPASSWORD.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun_INDEX_Table", &fRun_INDEX_Table);
      R__insp.InspectMember(fRun_INDEX_Table, "fRun_INDEX_Table.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebugMode", &fDebugMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fItemValueVersion", &fItemValueVersion);
      R__insp.InspectMember(fItemValueVersion, "fItemValueVersion.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMapUtils(void *p) {
      return  p ? new(p) ::TMapUtils : new ::TMapUtils;
   }
   static void *newArray_TMapUtils(Long_t nElements, void *p) {
      return p ? new(p) ::TMapUtils[nElements] : new ::TMapUtils[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMapUtils(void *p) {
      delete ((::TMapUtils*)p);
   }
   static void deleteArray_TMapUtils(void *p) {
      delete [] ((::TMapUtils*)p);
   }
   static void destruct_TMapUtils(void *p) {
      typedef ::TMapUtils current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TMapUtils(TBuffer &buf, void *obj) {
      ((::TMapUtils*)obj)->::TMapUtils::Streamer(buf);
   }
} // end of namespace ROOT for class ::TMapUtils

/********************************************************
* dicts/Linux64RHEL6/TMapUtilsDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTMapUtilsDict();

extern "C" void G__set_cpp_environmentTMapUtilsDict() {
  G__cpp_reset_tagtableTMapUtilsDict();
}
#include <new>
extern "C" int G__cpp_dllrevTMapUtilsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMapUtils */
static int G__TMapUtilsDict_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMapUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMapUtils[n];
     } else {
       p = new((void*) gvp) TMapUtils[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMapUtils;
     } else {
       p = new((void*) gvp) TMapUtils;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMapUtils* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMapUtils(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TMapUtils(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetDBParams((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetHost((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetDatabase((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetPassword((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TMapUtils*) G__getstructoffset())->GetTableName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->ScanMaps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->ScanSystem((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->PrintItem((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->PrintItemTable((TSQLServer*) G__int(libp->para[0]), *((TDBItem*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->CreateSystem((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->TableExists((TSQLServer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->TableExists_Ex((TSQLServer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TMapUtils*) G__getstructoffset())->ConnectDB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->GetSystemIDEx((TSQLServer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->GetSystemID((TSQLServer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->GetSubSystemIDEx((TSQLServer*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->GetSubSystemID((TSQLServer*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->GetItemEx((TSQLServer*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (TDBItem*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->GetItem((TSQLServer*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (TDBItem*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->GetRunIndexEx((TSQLServer*) G__int(libp->para[0]), *((TDBItem*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (TRunIndex*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMapUtils*) G__getstructoffset())->GetRunIndex((TSQLServer*) G__int(libp->para[0]), *((TDBItem*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (TRunIndex*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSQLResult& obj = ((TMapUtils*) G__getstructoffset())->SelectValues((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TMapUtils*) G__getstructoffset())->Get_Map_Int((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TArrayI*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TMapUtils*) G__getstructoffset())->Get_Map_Int((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TArrayI*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((TMapUtils*) G__getstructoffset())->Get_Map_Float((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TArrayF*) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TMapUtils*) G__getstructoffset())->Get_Map_Float((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TArrayF*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->PrintIntArray(*((TArrayI*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->PrintFloatArray(*((TArrayF*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->PrintInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetDebugMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetDbVersion((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->SetIndexTable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMapUtils::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMapUtils::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMapUtils::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMapUtils::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMapUtils*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMapUtils::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMapUtils::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMapUtils::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMapUtilsDict_233_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMapUtils::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TMapUtilsDict_233_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMapUtils* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMapUtils(*(TMapUtils*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMapUtils G__TTMapUtils;
static int G__TMapUtilsDict_233_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMapUtils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMapUtils*) (soff+(sizeof(TMapUtils)*i)))->~G__TTMapUtils();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMapUtils*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMapUtils*) (soff))->~G__TTMapUtils();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TMapUtilsDict_233_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMapUtils* dest = (TMapUtils*) G__getstructoffset();
   *dest = *(TMapUtils*) libp->para[0].ref;
   const TMapUtils& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMapUtils */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTMapUtilsDict {
 public:
  G__Sizep2memfuncTMapUtilsDict(): p(&G__Sizep2memfuncTMapUtilsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTMapUtilsDict::*p)();
};

size_t G__get_sizep2memfuncTMapUtilsDict()
{
  G__Sizep2memfuncTMapUtilsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTMapUtilsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils))) {
     TMapUtils *G__Lderived;
     G__Lderived=(TMapUtils*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils),G__get_linked_tagnum(&G__TMapUtilsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTMapUtilsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMapUtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMapUtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMapUtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMapUtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMapUtils */
static void G__setup_memvarTMapUtils(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils));
   { TMapUtils *p; p=(TMapUtils*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TString),-1,-1,4,"fHOSTNAME=",0,"Database HOST name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TString),-1,-1,4,"fDATABASE=",0,"Database to use");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TString),-1,-1,4,"fUSERNAME=",0,"Database User name ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TString),-1,-1,4,"fPASSWORD=",0,"Database User Password");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TString),-1,-1,4,"fRun_INDEX_Table=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDebugMode=",0,"Debugmode controls printouts given from various methods");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TString),-1,-1,4,"fItemValueVersion=",0,"This contains Velue table version Development or Production");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TMapUtilsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTMapUtilsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMapUtils(void) {
   /* TMapUtils */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils));
   G__memfunc_setup("TMapUtils",899,G__TMapUtilsDict_233_0_1, 105, G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils), -1, 0, 0, 1, 1, 0, "", "Default Constructor", (void*) NULL, 0);
   G__memfunc_setup("TMapUtils",899,G__TMapUtilsDict_233_0_2, 105, G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils), -1, 0, 3, 1, 1, 0, 
"C - - 10 - dbHOSTNAME C - - 10 - dbDATABASE "
"C - - 10 - dbUSERNAME", "Constructor with initializing Database Parameters", (void*) NULL, 0);
   G__memfunc_setup("SetDBParams",1046,G__TMapUtilsDict_233_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - dbHOSTNAME C - - 10 - dbDATABASE "
"C - - 10 - dbUSERNAME", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHost",714,G__TMapUtilsDict_233_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dbHOSTNAME", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDatabase",1089,G__TMapUtilsDict_233_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dbDATABASE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPassword",1151,G__TMapUtilsDict_233_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - dbPASSWORD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTableName",1161,G__TMapUtilsDict_233_0_7, 117, G__get_linked_tagnum(&G__TMapUtilsDictLN_TString), -1, 0, 3, 1, 1, 0, 
"C - - 10 - dSystem C - - 10 - dSubSystem "
"C - - 10 - dItem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanMaps",790,G__TMapUtilsDict_233_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "Prints out on Standart output  all Systems (Maps)", (void*) NULL, 0);
   G__memfunc_setup("ScanSystem",1034,G__TMapUtilsDict_233_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - tSystem", "Prints on Standard output SusSystems  of System tSystem", (void*) NULL, 0);
   G__memfunc_setup("PrintItem",924,G__TMapUtilsDict_233_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - tSystem C - - 10 - tSubSystem "
"C - - 10 - tItem i - 'Int_t' 0 - tMinRun "
"i - 'Int_t' 0 - tMaxRun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintItemTable",1412,G__TMapUtilsDict_233_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSQLServer' - 0 - fbConn u 'TDBItem' - 0 - tMapItem "
"i - 'Int_t' 0 - fcRunNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateSystem",1241,G__TMapUtilsDict_233_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - system", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TableExists",1128,G__TMapUtilsDict_233_0_13, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn C - - 10 - tblname", "Checks if given Table exists in database", (void*) NULL, 0);
   G__memfunc_setup("TableExists_Ex",1412,G__TMapUtilsDict_233_0_14, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn C - - 10 - tblname", "Checks if given Table exists in database with Exception", (void*) NULL, 0);
   G__memfunc_setup("ConnectDB",848,G__TMapUtilsDict_233_0_15, 85, G__get_linked_tagnum(&G__TMapUtilsDictLN_TSQLServer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystemIDEx",1263,G__TMapUtilsDict_233_0_16, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn C - - 10 - system_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSystemID",1074,G__TMapUtilsDict_233_0_17, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn C - - 10 - system_name "
"I - 'Int_t' 0 - pSystem_ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubSystemIDEx",1561,G__TMapUtilsDict_233_0_18, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn i - - 0 - system_id "
"C - - 10 - subsystem_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubSystemID",1372,G__TMapUtilsDict_233_0_19, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn i - - 0 - system_id "
"C - - 10 - subsystem_name I - 'Int_t' 0 - pSubSystem_ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetItemEx",876,G__TMapUtilsDict_233_0_20, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TSQLServer' - 0 - conn i - - 0 - subsystem_id "
"C - - 10 - item_name U 'TDBItem' - 0 - fMapItem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetItem",687,G__TMapUtilsDict_233_0_21, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"U 'TSQLServer' - 0 - fbConn C - - 10 - tSystem "
"C - - 10 - tSubSystem C - - 10 - tItem "
"U 'TDBItem' - 0 - tMapItem", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunIndexEx",1290,G__TMapUtilsDict_233_0_22, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TSQLServer' - 0 - fbConn u 'TDBItem' - 0 - tMapItem "
"i - 'Int_t' 0 - fcRunNum C - - 10 - fcAuthor "
"U 'TRunIndex' - 0 - tRunIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunIndex",1101,G__TMapUtilsDict_233_0_23, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"U 'TSQLServer' - 0 - fbConn u 'TDBItem' - 0 - tMapItem "
"i - 'Int_t' 0 - fcRunNum C - - 10 - fcAuthor "
"U 'TRunIndex' - 0 - tRunIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectValues",1232,G__TMapUtilsDict_233_0_24, 117, G__get_linked_tagnum(&G__TMapUtilsDictLN_TSQLResult), -1, 1, 6, 1, 1, 0, 
"C - - 10 - fcSystem C - - 10 - fcSubSystem "
"C - - 10 - fcItem i - 'Int_t' 0 - fcRun_no "
"C - - 10 - fcAuthor C - - 10 - fcValueType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_Map_Int",1063,G__TMapUtilsDict_233_0_25, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - fcSystem C - - 10 - fcSubSystem "
"C - - 10 - fcItem i - 'Int_t' 0 - fcRun_no "
"U 'TArrayI' - 0 - fIntArray C - - 10 '\"*\"' fcAuthor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_Map_Float",1266,G__TMapUtilsDict_233_0_26, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - fcSystem C - - 10 - fcSubSystem "
"C - - 10 - fcItem i - 'Int_t' 0 - fcRun_no "
"U 'TArrayF' - 0 - fFloatArray C - - 10 '\"*\"' fcAuthor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintIntArray",1335,G__TMapUtilsDict_233_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayI' - 0 - tmpIArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintFloatArray",1538,G__TMapUtilsDict_233_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TArrayF' - 0 - tmpFArray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInfo",921,G__TMapUtilsDict_233_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugMode",1176,G__TMapUtilsDict_233_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - DbgMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDbVersion",1208,G__TMapUtilsDict_233_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fVersion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndexTable",1292,G__TMapUtilsDict_233_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fRunIndexTableName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TMapUtilsDict_233_0_33, 85, G__get_linked_tagnum(&G__TMapUtilsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMapUtils::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TMapUtilsDict_233_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMapUtils::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TMapUtilsDict_233_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMapUtils::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TMapUtilsDict_233_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMapUtils::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TMapUtilsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TMapUtilsDict_233_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TMapUtilsDict_233_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMapUtils::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TMapUtilsDict_233_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMapUtils::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TMapUtilsDict_233_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMapUtils::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TMapUtilsDict_233_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMapUtils::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMapUtils", 899, G__TMapUtilsDict_233_0_45, (int) ('i'), G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils), -1, 0, 1, 1, 1, 0, "u 'TMapUtils' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMapUtils", 1025, G__TMapUtilsDict_233_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TMapUtilsDict_233_0_47, (int) ('u'), G__get_linked_tagnum(&G__TMapUtilsDictLN_TMapUtils), -1, 1, 1, 1, 1, 0, "u 'TMapUtils' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTMapUtilsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTMapUtilsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTMapUtilsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TMapUtilsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TSQLResult = { "TSQLResult" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TSQLServer = { "TSQLServer" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TDBItem = { "TDBItem" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TRunIndex = { "TRunIndex" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__TMapUtilsDictLN_TMapUtils = { "TMapUtils" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTMapUtilsDict() {
  G__TMapUtilsDictLN_TClass.tagnum = -1 ;
  G__TMapUtilsDictLN_TBuffer.tagnum = -1 ;
  G__TMapUtilsDictLN_TMemberInspector.tagnum = -1 ;
  G__TMapUtilsDictLN_TObject.tagnum = -1 ;
  G__TMapUtilsDictLN_TString.tagnum = -1 ;
  G__TMapUtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TMapUtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TMapUtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TMapUtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TMapUtilsDictLN_TSQLResult.tagnum = -1 ;
  G__TMapUtilsDictLN_TSQLServer.tagnum = -1 ;
  G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TMapUtilsDictLN_TDBItem.tagnum = -1 ;
  G__TMapUtilsDictLN_TRunIndex.tagnum = -1 ;
  G__TMapUtilsDictLN_TArrayI.tagnum = -1 ;
  G__TMapUtilsDictLN_TArrayF.tagnum = -1 ;
  G__TMapUtilsDictLN_TMapUtils.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTMapUtilsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TSQLResult);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TSQLServer);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TDBItem);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TRunIndex);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TArrayF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TMapUtilsDictLN_TMapUtils),sizeof(TMapUtils),-1,62720,"Class of Tools for Calibration Constant Maps",G__setup_memvarTMapUtils,G__setup_memfuncTMapUtils);
}
extern "C" void G__cpp_setupTMapUtilsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTMapUtilsDict()");
  G__set_cpp_environmentTMapUtilsDict();
  G__cpp_setup_tagtableTMapUtilsDict();

  G__cpp_setup_inheritanceTMapUtilsDict();

  G__cpp_setup_typetableTMapUtilsDict();

  G__cpp_setup_memvarTMapUtilsDict();

  G__cpp_setup_memfuncTMapUtilsDict();
  G__cpp_setup_globalTMapUtilsDict();
  G__cpp_setup_funcTMapUtilsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTMapUtilsDict();
  return;
}
class G__cpp_setup_initTMapUtilsDict {
  public:
    G__cpp_setup_initTMapUtilsDict() { G__add_setup_func("TMapUtilsDict",(G__incsetup)(&G__cpp_setupTMapUtilsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTMapUtilsDict() { G__remove_setup_func("TMapUtilsDict"); }
};
G__cpp_setup_initTMapUtilsDict G__cpp_setup_initializerTMapUtilsDict;

