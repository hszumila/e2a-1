//
// File generated by /u/apps/root/5.34.13/root/bin/rootcint at Fri Jan 20 19:16:49 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL6dITRunIndexDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TRunIndexDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TRunIndex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRunIndex(void *p = 0);
   static void *newArray_TRunIndex(Long_t size, void *p);
   static void delete_TRunIndex(void *p);
   static void deleteArray_TRunIndex(void *p);
   static void destruct_TRunIndex(void *p);
   static void streamer_TRunIndex(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRunIndex*)
   {
      ::TRunIndex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRunIndex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRunIndex", ::TRunIndex::Class_Version(), "./TRunIndex.h", 19,
                  typeid(::TRunIndex), DefineBehavior(ptr, ptr),
                  &::TRunIndex::Dictionary, isa_proxy, 0,
                  sizeof(::TRunIndex) );
      instance.SetNew(&new_TRunIndex);
      instance.SetNewArray(&newArray_TRunIndex);
      instance.SetDelete(&delete_TRunIndex);
      instance.SetDeleteArray(&deleteArray_TRunIndex);
      instance.SetDestructor(&destruct_TRunIndex);
      instance.SetStreamerFunc(&streamer_TRunIndex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRunIndex*)
   {
      return GenerateInitInstanceLocal((::TRunIndex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRunIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TRunIndex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRunIndex::Class_Name()
{
   return "TRunIndex";
}

//______________________________________________________________________________
const char *TRunIndex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRunIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRunIndex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRunIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRunIndex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRunIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRunIndex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRunIndex*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TRunIndex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRunIndex.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fRunIndexId;
      R__b >> fMinRun;
      R__b >> fMaxRun;
      R__b >> fItemId;
      R__b >> fItemValueId;
      fOfficer.Streamer(R__b);
      fTime.Streamer(R__b);
      fComment.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TRunIndex::IsA());
   } else {
      R__c = R__b.WriteVersion(TRunIndex::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fRunIndexId;
      R__b << fMinRun;
      R__b << fMaxRun;
      R__b << fItemId;
      R__b << fItemValueId;
      fOfficer.Streamer(R__b);
      fTime.Streamer(R__b);
      fComment.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TRunIndex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRunIndex.
      TClass *R__cl = ::TRunIndex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunIndexId", &fRunIndexId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinRun", &fMinRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxRun", &fMaxRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fItemId", &fItemId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fItemValueId", &fItemValueId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOfficer", &fOfficer);
      R__insp.InspectMember(fOfficer, "fOfficer.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.InspectMember(fTime, "fTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fComment", &fComment);
      R__insp.InspectMember(fComment, "fComment.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRunIndex(void *p) {
      return  p ? new(p) ::TRunIndex : new ::TRunIndex;
   }
   static void *newArray_TRunIndex(Long_t nElements, void *p) {
      return p ? new(p) ::TRunIndex[nElements] : new ::TRunIndex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRunIndex(void *p) {
      delete ((::TRunIndex*)p);
   }
   static void deleteArray_TRunIndex(void *p) {
      delete [] ((::TRunIndex*)p);
   }
   static void destruct_TRunIndex(void *p) {
      typedef ::TRunIndex current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TRunIndex(TBuffer &buf, void *obj) {
      ((::TRunIndex*)obj)->::TRunIndex::Streamer(buf);
   }
} // end of namespace ROOT for class ::TRunIndex

/********************************************************
* dicts/Linux64RHEL6/TRunIndexDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTRunIndexDict();

extern "C" void G__set_cpp_environmentTRunIndexDict() {
  G__cpp_reset_tagtableTRunIndexDict();
}
#include <new>
extern "C" int G__cpp_dllrevTRunIndexDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TRunIndex */
static int G__TRunIndexDict_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRunIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRunIndex[n];
     } else {
       p = new((void*) gvp) TRunIndex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRunIndex;
     } else {
       p = new((void*) gvp) TRunIndex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRunIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TRunIndex(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) TRunIndex(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRunIndex*) G__getstructoffset())->Set(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRunIndex*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRunIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRunIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRunIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRunIndex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRunIndex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRunIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRunIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRunIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TRunIndexDict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRunIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TRunIndexDict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRunIndex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRunIndex(*(TRunIndex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRunIndex G__TTRunIndex;
static int G__TRunIndexDict_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRunIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRunIndex*) (soff+(sizeof(TRunIndex)*i)))->~G__TTRunIndex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRunIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRunIndex*) (soff))->~G__TTRunIndex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TRunIndexDict_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRunIndex* dest = (TRunIndex*) G__getstructoffset();
   *dest = *(TRunIndex*) libp->para[0].ref;
   const TRunIndex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TRunIndex */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTRunIndexDict {
 public:
  G__Sizep2memfuncTRunIndexDict(): p(&G__Sizep2memfuncTRunIndexDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTRunIndexDict::*p)();
};

size_t G__get_sizep2memfuncTRunIndexDict()
{
  G__Sizep2memfuncTRunIndexDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTRunIndexDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex))) {
     TRunIndex *G__Lderived;
     G__Lderived=(TRunIndex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex),G__get_linked_tagnum(&G__TRunIndexDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTRunIndexDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TRunIndexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TRunIndexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TRunIndexDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TRunIndexDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TRunIndex */
static void G__setup_memvarTRunIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex));
   { TRunIndex *p; p=(TRunIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRunIndexId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fRunIndexId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMinRun)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMinRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMaxRun)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMaxRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fItemId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fItemId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fItemValueId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fItemValueId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOfficer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TRunIndexDictLN_TString),-1,-1,1,"fOfficer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TRunIndexDictLN_TString),-1,-1,1,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fComment)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TRunIndexDictLN_TString),-1,-1,1,"fComment=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TRunIndexDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTRunIndexDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTRunIndex(void) {
   /* TRunIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex));
   G__memfunc_setup("TRunIndex",897,G__TRunIndexDict_219_0_1, 105, G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRunIndex",897,G__TRunIndexDict_219_0_2, 105, G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - fpRunIndexId i - 'Int_t' 0 - fpMinRun "
"i - 'Int_t' 0 - fpMaxRun i - 'Int_t' 0 - fpItemId "
"i - 'Int_t' 0 - fpItemValueId C - - 10 - fpOfficer "
"C - - 10 - fpTime C - - 10 - fpComment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__TRunIndexDict_219_0_3, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - fpRunIndexId i - 'Int_t' 0 - fpMinRun "
"i - 'Int_t' 0 - fpMaxRun i - 'Int_t' 0 - fpItemId "
"i - 'Int_t' 0 - fpItemValueId C - - 10 - fpOfficer "
"C - - 10 - fpTime C - - 10 - fpComment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TRunIndexDict_219_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TRunIndexDict_219_0_5, 85, G__get_linked_tagnum(&G__TRunIndexDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRunIndex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TRunIndexDict_219_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRunIndex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TRunIndexDict_219_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRunIndex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TRunIndexDict_219_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRunIndex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TRunIndexDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TRunIndexDict_219_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TRunIndexDict_219_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRunIndex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TRunIndexDict_219_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRunIndex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TRunIndexDict_219_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRunIndex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TRunIndexDict_219_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRunIndex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRunIndex", 897, G__TRunIndexDict_219_0_17, (int) ('i'), G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex), -1, 0, 1, 1, 1, 0, "u 'TRunIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRunIndex", 1023, G__TRunIndexDict_219_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TRunIndexDict_219_0_19, (int) ('u'), G__get_linked_tagnum(&G__TRunIndexDictLN_TRunIndex), -1, 1, 1, 1, 1, 0, "u 'TRunIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTRunIndexDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTRunIndexDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTRunIndexDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TRunIndexDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TRunIndexDictLN_TRunIndex = { "TRunIndex" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTRunIndexDict() {
  G__TRunIndexDictLN_TClass.tagnum = -1 ;
  G__TRunIndexDictLN_TBuffer.tagnum = -1 ;
  G__TRunIndexDictLN_TMemberInspector.tagnum = -1 ;
  G__TRunIndexDictLN_TObject.tagnum = -1 ;
  G__TRunIndexDictLN_TString.tagnum = -1 ;
  G__TRunIndexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TRunIndexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TRunIndexDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TRunIndexDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TRunIndexDictLN_TRunIndex.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTRunIndexDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_TString);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TRunIndexDictLN_TRunIndex),sizeof(TRunIndex),-1,62720,"Class for Map Item Value Description",G__setup_memvarTRunIndex,G__setup_memfuncTRunIndex);
}
extern "C" void G__cpp_setupTRunIndexDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTRunIndexDict()");
  G__set_cpp_environmentTRunIndexDict();
  G__cpp_setup_tagtableTRunIndexDict();

  G__cpp_setup_inheritanceTRunIndexDict();

  G__cpp_setup_typetableTRunIndexDict();

  G__cpp_setup_memvarTRunIndexDict();

  G__cpp_setup_memfuncTRunIndexDict();
  G__cpp_setup_globalTRunIndexDict();
  G__cpp_setup_funcTRunIndexDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTRunIndexDict();
  return;
}
class G__cpp_setup_initTRunIndexDict {
  public:
    G__cpp_setup_initTRunIndexDict() { G__add_setup_func("TRunIndexDict",(G__incsetup)(&G__cpp_setupTRunIndexDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTRunIndexDict() { G__remove_setup_func("TRunIndexDict"); }
};
G__cpp_setup_initTRunIndexDict G__cpp_setup_initializerTRunIndexDict;

