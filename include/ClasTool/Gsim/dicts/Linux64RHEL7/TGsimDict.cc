//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:52:14 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITGsimDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TGsimDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TGsim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGsim(void *p = 0);
   static void *newArray_TGsim(Long_t size, void *p);
   static void delete_TGsim(void *p);
   static void deleteArray_TGsim(void *p);
   static void destruct_TGsim(void *p);
   static void streamer_TGsim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGsim*)
   {
      ::TGsim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGsim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGsim", ::TGsim::Class_Version(), "./TGsim.h", 61,
                  typeid(::TGsim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGsim::Dictionary, isa_proxy, 0,
                  sizeof(::TGsim) );
      instance.SetNew(&new_TGsim);
      instance.SetNewArray(&newArray_TGsim);
      instance.SetDelete(&delete_TGsim);
      instance.SetDeleteArray(&deleteArray_TGsim);
      instance.SetDestructor(&destruct_TGsim);
      instance.SetStreamerFunc(&streamer_TGsim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGsim*)
   {
      return GenerateInitInstanceLocal((::TGsim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGsim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TGsim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGsim::Class_Name()
{
   return "TGsim";
}

//______________________________________________________________________________
const char *TGsim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGsim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGsim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGsim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGsim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGsim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGsim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGsim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TGsim::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGsim.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fDebug_Mode;
      R__b >> fDesc_in;
      R__b >> fDesc_out;
      fNow.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TGsim::IsA());
   } else {
      R__c = R__b.WriteVersion(TGsim::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fDebug_Mode;
      R__b << fDesc_in;
      R__b << fDesc_out;
      fNow.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TGsim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGsim.
      TClass *R__cl = ::TGsim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebug_Mode", &fDebug_Mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDesc_in", &fDesc_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDesc_out", &fDesc_out);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNow", &fNow);
      R__insp.InspectMember(fNow, "fNow.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TGsim(void *p) {
      return  p ? new(p) ::TGsim : new ::TGsim;
   }
   static void *newArray_TGsim(Long_t nElements, void *p) {
      return p ? new(p) ::TGsim[nElements] : new ::TGsim[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGsim(void *p) {
      delete ((::TGsim*)p);
   }
   static void deleteArray_TGsim(void *p) {
      delete [] ((::TGsim*)p);
   }
   static void destruct_TGsim(void *p) {
      typedef ::TGsim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TGsim(TBuffer &buf, void *obj) {
      ((::TGsim*)obj)->::TGsim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TGsim

/********************************************************
* dicts/Linux64RHEL7/TGsimDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTGsimDict();

extern "C" void G__set_cpp_environmentTGsimDict() {
  G__cpp_reset_tagtableTGsimDict();
}
#include <new>
extern "C" int G__cpp_dllrevTGsimDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGsim */
static int G__TGsimDict_1109_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGsim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGsim[n];
     } else {
       p = new((void*) gvp) TGsim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGsim;
     } else {
       p = new((void*) gvp) TGsim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGsimDictLN_TGsim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->OpenFile((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->OpenFile((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGsim*) G__getstructoffset())->CloseFiles((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGsim*) G__getstructoffset())->CloseFiles();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->WriteBOS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->ReadBOS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 89, (long) ((TGsim*) G__getstructoffset())->CreateBank((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 89, (long) ((TGsim*) G__getstructoffset())->CreateBank((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 89, (long) ((TGsim*) G__getstructoffset())->CreateBank((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillPART((TGSIMClass*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillPART((TGSIMClass*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillPART((TEVNTClass*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillPART((TEVNTClass*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillPART(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TVector3*) G__int(libp->para[4]), (TLorentzVector*) G__int(libp->para[5])
, (Float_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillPART((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TVector3*) G__int(libp->para[4]), (TLorentzVector*) G__int(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGsim*) G__getstructoffset())->FillMCTKPART((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3]))
, *((TLorentzVector*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillHEAD((THEADClass*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillHEAD((THEADERClass*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGsim*) G__getstructoffset())->FillHEAD((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->CopyEvent((TVirtualReader*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->BankFormat((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TGsim*) G__getstructoffset())->FixName((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((TGsim*) G__getstructoffset())->GetBank((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->GetEvtNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->GetRunNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->GetPartId((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->GetPartId((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->GetPartId());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((TGsim*) G__getstructoffset())->GetPartQ((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((TGsim*) G__getstructoffset())->GetPartQ((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((TGsim*) G__getstructoffset())->GetPartQ());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TVector3* pobj;
         TVector3 xobj = ((TGsim*) G__getstructoffset())->GetPartVert((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TVector3* pobj;
         TVector3 xobj = ((TGsim*) G__getstructoffset())->GetPartVert((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TVector3* pobj;
         TVector3 xobj = ((TGsim*) G__getstructoffset())->GetPartVert();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TGsim*) G__getstructoffset())->GetPartP4((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TGsim*) G__getstructoffset())->GetPartP4((Int_t) G__int(libp->para[0]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TGsim*) G__getstructoffset())->GetPartP4();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TGsim*) G__getstructoffset())->IsMCEvent((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TGsim*) G__getstructoffset())->IsMCEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TGsim*) G__getstructoffset())->IsDataEvent((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TGsim*) G__getstructoffset())->IsDataEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGsim*) G__getstructoffset())->PrintHead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TGsim*) G__getstructoffset())->PrintPart((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TGsim*) G__getstructoffset())->PrintPart((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGsim*) G__getstructoffset())->PrintPart();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->Geant_to_PDG((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGsim*) G__getstructoffset())->PDG_to_Geant((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TGsim*) G__getstructoffset())->GetPartMassFromPid((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TGsim*) G__getstructoffset())->GetPartMassFromIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGsim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGsim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGsim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGsim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGsim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGsim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGsim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGsim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGsimDict_1109_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGsim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TGsimDict_1109_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGsim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGsim(*(TGsim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGsimDictLN_TGsim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGsim G__TTGsim;
static int G__TGsimDict_1109_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGsim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGsim*) (soff+(sizeof(TGsim)*i)))->~G__TTGsim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGsim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGsim*) (soff))->~G__TTGsim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TGsimDict_1109_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGsim* dest = (TGsim*) G__getstructoffset();
   *dest = *(TGsim*) libp->para[0].ref;
   const TGsim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGsim */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTGsimDict {
 public:
  G__Sizep2memfuncTGsimDict(): p(&G__Sizep2memfuncTGsimDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTGsimDict::*p)();
};

size_t G__get_sizep2memfuncTGsimDict()
{
  G__Sizep2memfuncTGsimDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTGsimDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TGsimDictLN_TGsim))) {
     TGsim *G__Lderived;
     G__Lderived=(TGsim*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TGsimDictLN_TGsim),G__get_linked_tagnum(&G__TGsimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTGsimDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("clasHEAD_t",117,G__get_linked_tagnum(&G__TGsimDictLN_clasHEAD_t),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("clasPART_t",117,G__get_linked_tagnum(&G__TGsimDictLN_clasPART_t),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGsimDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__TGsimDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGsim */
static void G__setup_memvarTGsim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGsimDictLN_TGsim));
   { TGsim *p; p=(TGsim*)0x1000; if (p) { }
   G__memvar_setup((void*)(&TGsim::fgGeant_Particle_Mass),102,0,1,-1,G__defined_typename("Float_t"),-2,1,"fgGeant_Particle_Mass[50]=",0,(char*)NULL);
   G__memvar_setup((void*)(&TGsim::fgGeant_Particle_Id),105,0,1,-1,G__defined_typename("Int_t"),-2,1,"fgGeant_Particle_Id[50]=",0,(char*)NULL);
   G__memvar_setup((void*)(&TGsim::fgGeant_Particle_Label),67,0,1,-1,-1,-2,1,"fgGeant_Particle_Label[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDebug_Mode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDebug_Mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDesc_in)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDesc_in=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDesc_out)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fDesc_out=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNow)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TGsimDictLN_TDatime),-1,-1,1,"fNow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TGsimDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTGsimDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGsim(void) {
   /* TGsim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGsimDictLN_TGsim));
   G__memfunc_setup("TGsim",484,G__TGsimDict_1109_0_1, 105, G__get_linked_tagnum(&G__TGsimDictLN_TGsim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenFile",786,G__TGsimDict_1109_0_2, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 '\"r\"' readwrite", "Open a BOS file for reading \"r\" or writing \"w\".", (void*) NULL, 0);
   G__memfunc_setup("CloseFiles",1001,G__TGsimDict_1109_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' desc", "Close all open BOS files, or file specified.", (void*) NULL, 0);
   G__memfunc_setup("WriteBOS",751,G__TGsimDict_1109_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "Write the current BOS array to file.", (void*) NULL, 0);
   G__memfunc_setup("ReadBOS",608,G__TGsimDict_1109_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "Read the next BOS array from file.", (void*) NULL, 0);
   G__memfunc_setup("CreateBank",976,G__TGsimDict_1109_0_6, 89, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - name i - 'Int_t' 0 - nr "
"i - 'Int_t' 0 '-1' ncols i - 'Int_t' 0 '1' nrows", "Create a named bank in the bos array.", (void*) NULL, 0);
   G__memfunc_setup("FillPART",702,G__TGsimDict_1109_0_7, 85, G__get_linked_tagnum(&G__TGsimDictLN_clasPART_t), G__defined_typename("clasPART_t"), 0, 3, 1, 1, 0, 
"U 'TGSIMClass' - 0 - gsim i - 'Int_t' 0 - nr "
"i - 'Int_t' 0 '0' nrow", "Fill PART at row nrow with the contends of TGSIMclass.", (void*) NULL, 0);
   G__memfunc_setup("FillPART",702,G__TGsimDict_1109_0_8, 85, G__get_linked_tagnum(&G__TGsimDictLN_clasPART_t), G__defined_typename("clasPART_t"), 0, 3, 1, 1, 0, 
"U 'TEVNTClass' - 0 - evnt i - 'Int_t' 0 - nr "
"i - 'Int_t' 0 '0' nrow", "Fill PART at row nrow with the contends of TEVNTclass.", (void*) NULL, 0);
   G__memfunc_setup("FillPART",702,G__TGsimDict_1109_0_9, 85, G__get_linked_tagnum(&G__TGsimDictLN_clasPART_t), G__defined_typename("clasPART_t"), 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - nr i - 'Int_t' 0 - nrow "
"i - 'Int_t' 0 - pid i - 'Int_t' 0 - q "
"U 'TVector3' - 0 - vert U 'TLorentzVector' - 0 - mom "
"f - 'Float_t' 0 '1' weight", "Fill PART", (void*) NULL, 0);
   G__memfunc_setup("FillMCTKPART",1005,G__TGsimDict_1109_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - n_row i - - 0 - pid "
"i - - 0 - _charge u 'TVector3' - 0 - _vrt "
"u 'TLorentzVector' - 0 - _mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHEAD",665,G__TGsimDict_1109_0_11, 85, G__get_linked_tagnum(&G__TGsimDictLN_clasHEAD_t), G__defined_typename("clasHEAD_t"), 0, 1, 1, 1, 0, "U 'THEADClass' - 0 - head", "Fill HEAD bank from THEADClass.", (void*) NULL, 0);
   G__memfunc_setup("FillHEAD",665,G__TGsimDict_1109_0_12, 85, G__get_linked_tagnum(&G__TGsimDictLN_clasHEAD_t), G__defined_typename("clasHEAD_t"), 0, 1, 1, 1, 0, "U 'THEADERClass' - 0 - head", "Fill HEAD bank from THEADERClass.", (void*) NULL, 0);
   G__memfunc_setup("FillHEAD",665,G__TGsimDict_1109_0_13, 85, G__get_linked_tagnum(&G__TGsimDictLN_clasHEAD_t), G__defined_typename("clasHEAD_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runnum i - 'Int_t' 0 - evt_num", "Fill a new head bank with given params.", (void*) NULL, 0);
   G__memfunc_setup("CopyEvent",925,G__TGsimDict_1109_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TVirtualReader' - 0 - ea", "Copy an event from ROOT to BOS (creates PART bank only).  ", (void*) NULL, 0);
   G__memfunc_setup("BankFormat",997,G__TGsimDict_1109_0_15, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - format", "Define format of BOS bank.", (void*) NULL, 0);
   G__memfunc_setup("FixName",680,G__TGsimDict_1109_0_16, 67, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBank",668,G__TGsimDict_1109_0_17, 89, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - nr", "Find a bank in the BOS array.", (void*) NULL, 0);
   G__memfunc_setup("GetEvtNum",895,G__TGsimDict_1109_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNum",901,G__TGsimDict_1109_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartId",868,G__TGsimDict_1109_0_20, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' nr i - 'Int_t' 0 '0' nrow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartQ",776,G__TGsimDict_1109_0_21, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' nr i - 'Int_t' 0 '0' nrow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartVert",1112,G__TGsimDict_1109_0_22, 117, G__get_linked_tagnum(&G__TGsimDictLN_TVector3), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' nr i - 'Int_t' 0 '0' nrow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartP4",827,G__TGsimDict_1109_0_23, 117, G__get_linked_tagnum(&G__TGsimDictLN_TLorentzVector), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' nr i - 'Int_t' 0 '0' nrow", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMCEvent",846,G__TGsimDict_1109_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' itype", "Return True if event is MC type of itype.", (void*) NULL, 0);
   G__memfunc_setup("IsDataEvent",1080,G__TGsimDict_1109_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '2' itype", "Return True if event is Data type of itype.", (void*) NULL, 0);
   G__memfunc_setup("PrintHead",895,G__TGsimDict_1109_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", "Print the head bank.", (void*) NULL, 0);
   G__memfunc_setup("PrintPart",932,G__TGsimDict_1109_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' nr i - 'Int_t' 0 '-1' ncol", "Print PART bank.", (void*) NULL, 0);
   G__memfunc_setup("Geant_to_PDG",1131,G__TGsimDict_1109_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pid", "Convert a GEANT PID to a PDG PID.", (void*) NULL, 0);
   G__memfunc_setup("PDG_to_Geant",1131,G__TGsimDict_1109_0_29, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pid", "Convert a PDG PID to a GEANT ID.", (void*) NULL, 0);
   G__memfunc_setup("GetPartMassFromPid",1788,G__TGsimDict_1109_0_30, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pid", "Get the mass of particle given the PDG PID", (void*) NULL, 0);
   G__memfunc_setup("GetPartMassFromIndex",2007,G__TGsimDict_1109_0_31, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - indx", "Get the mass of particle given the index=GEANT ID.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TGsimDict_1109_0_32, 85, G__get_linked_tagnum(&G__TGsimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGsim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TGsimDict_1109_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGsim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TGsimDict_1109_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGsim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TGsimDict_1109_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGsim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TGsimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TGsimDict_1109_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TGsimDict_1109_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGsim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TGsimDict_1109_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGsim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TGsimDict_1109_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGsim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TGsimDict_1109_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGsim::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGsim", 484, G__TGsimDict_1109_0_44, (int) ('i'), G__get_linked_tagnum(&G__TGsimDictLN_TGsim), -1, 0, 1, 1, 1, 0, "u 'TGsim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGsim", 610, G__TGsimDict_1109_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TGsimDict_1109_0_46, (int) ('u'), G__get_linked_tagnum(&G__TGsimDictLN_TGsim), -1, 1, 1, 1, 1, 0, "u 'TGsim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTGsimDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTGsimDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTGsimDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TGsimDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TGsimDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_clasHEAD_t = { "clasHEAD_t" , 115 , -1 };
G__linked_taginfo G__TGsimDictLN_clasPART_t = { "clasPART_t" , 115 , -1 };
G__linked_taginfo G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_THEADERClass = { "THEADERClass" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TEVNTClass = { "TEVNTClass" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_THEADClass = { "THEADClass" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TGSIMClass = { "TGSIMClass" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TVirtualReader = { "TVirtualReader" , 99 , -1 };
G__linked_taginfo G__TGsimDictLN_TGsim = { "TGsim" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTGsimDict() {
  G__TGsimDictLN_TClass.tagnum = -1 ;
  G__TGsimDictLN_TBuffer.tagnum = -1 ;
  G__TGsimDictLN_TMemberInspector.tagnum = -1 ;
  G__TGsimDictLN_TObject.tagnum = -1 ;
  G__TGsimDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TGsimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TGsimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGsimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TGsimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TGsimDictLN_TDatime.tagnum = -1 ;
  G__TGsimDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__TGsimDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TGsimDictLN_TVector3.tagnum = -1 ;
  G__TGsimDictLN_TLorentzVector.tagnum = -1 ;
  G__TGsimDictLN_clasHEAD_t.tagnum = -1 ;
  G__TGsimDictLN_clasPART_t.tagnum = -1 ;
  G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__TGsimDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__TGsimDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGsimDictLN_THEADERClass.tagnum = -1 ;
  G__TGsimDictLN_TEVNTClass.tagnum = -1 ;
  G__TGsimDictLN_THEADClass.tagnum = -1 ;
  G__TGsimDictLN_TGSIMClass.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__TGsimDictLN_TVirtualReader.tagnum = -1 ;
  G__TGsimDictLN_TGsim.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTGsimDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_clasHEAD_t);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_clasPART_t);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_THEADERClass);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TEVNTClass);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_THEADClass);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TGSIMClass);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGsimDictLN_TVirtualReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGsimDictLN_TGsim),sizeof(TGsim),-1,29952,"A class for interfacing to the Monte Carlo.",G__setup_memvarTGsim,G__setup_memfuncTGsim);
}
extern "C" void G__cpp_setupTGsimDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTGsimDict()");
  G__set_cpp_environmentTGsimDict();
  G__cpp_setup_tagtableTGsimDict();

  G__cpp_setup_inheritanceTGsimDict();

  G__cpp_setup_typetableTGsimDict();

  G__cpp_setup_memvarTGsimDict();

  G__cpp_setup_memfuncTGsimDict();
  G__cpp_setup_globalTGsimDict();
  G__cpp_setup_funcTGsimDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTGsimDict();
  return;
}
class G__cpp_setup_initTGsimDict {
  public:
    G__cpp_setup_initTGsimDict() { G__add_setup_func("TGsimDict",(G__incsetup)(&G__cpp_setupTGsimDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTGsimDict() { G__remove_setup_func("TGsimDict"); }
};
G__cpp_setup_initTGsimDict G__cpp_setup_initializerTGsimDict;

