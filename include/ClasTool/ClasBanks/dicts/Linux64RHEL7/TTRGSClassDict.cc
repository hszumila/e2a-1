//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:38:11 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITTRGSClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TTRGSClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TTRGSClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TTRGSClass(void *p = 0);
   static void *newArray_TTRGSClass(Long_t size, void *p);
   static void delete_TTRGSClass(void *p);
   static void deleteArray_TTRGSClass(void *p);
   static void destruct_TTRGSClass(void *p);
   static void streamer_TTRGSClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TTRGSClass*)
   {
      ::TTRGSClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTRGSClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTRGSClass", ::TTRGSClass::Class_Version(), "./TTRGSClass.h", 20,
                  typeid(::TTRGSClass), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TTRGSClass::Dictionary, isa_proxy, 0,
                  sizeof(::TTRGSClass) );
      instance.SetNew(&new_TTRGSClass);
      instance.SetNewArray(&newArray_TTRGSClass);
      instance.SetDelete(&delete_TTRGSClass);
      instance.SetDeleteArray(&deleteArray_TTRGSClass);
      instance.SetDestructor(&destruct_TTRGSClass);
      instance.SetStreamerFunc(&streamer_TTRGSClass);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TTRGSClass*)
   {
      return GenerateInitInstanceLocal((::TTRGSClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTRGSClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TTRGSClass::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTRGSClass::Class_Name()
{
   return "TTRGSClass";
}

//______________________________________________________________________________
const char *TTRGSClass::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TTRGSClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTRGSClass::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TTRGSClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTRGSClass::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TTRGSClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTRGSClass::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TTRGSClass*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TTRGSClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTRGSClass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> Clock_ug;
      R__b >> Fcup_ug;
      R__b >> Microsec;
      R__b >> Mor_st;
      R__b >> Mor_pc;
      R__b >> Mor_ps;
      R__b >> Mor_tac;
      R__b >> Mor;
      R__b >> Pc;
      R__b >> Ps;
      R__b >> Tac;
      R__b >> St;
      R__b >> Clock_ug_2;
      R__b >> Fcup_ug_2;
      R__b >> Clock_g1;
      R__b >> Fcup_g1;
      R__b >> Mor_st_rg;
      R__b >> Mor_pc_rg;
      R__b >> Mor_ps_rg;
      R__b >> Mor_tac_rg;
      R__b >> Mor_rg;
      R__b >> Pc_rg;
      R__b >> Ps_rg;
      R__b >> Tac_rg;
      R__b >> St_rg;
      R__b >> Clock_g1_2;
      R__b >> Fcup_g1_2;
      R__b >> Clock_g2;
      R__b >> Fcup_g2;
      R__b >> Mor_lg;
      R__b >> Clock_g2_2;
      R__b >> Fcup_g2_2;
      R__b >> Trig1_ug;
      R__b >> Trig2_ug;
      R__b >> Trig3_ug;
      R__b >> Trig4_ug;
      R__b >> Trig5_ug;
      R__b >> Trig6_ug;
      R__b >> Trig7_ug;
      R__b >> Trig8_ug;
      R__b >> Trig9_ug;
      R__b >> Trig10_ug;
      R__b >> Trig11_ug;
      R__b >> Trig12_ug;
      R__b >> Trig_or_ug;
      R__b >> L1accept;
      R__b >> L2fail;
      R__b >> L2pass;
      R__b >> L2start;
      R__b >> L2clear;
      R__b >> L2accept;
      R__b >> L3accept;
      R__b.CheckByteCount(R__s, R__c, TTRGSClass::IsA());
   } else {
      R__c = R__b.WriteVersion(TTRGSClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << Clock_ug;
      R__b << Fcup_ug;
      R__b << Microsec;
      R__b << Mor_st;
      R__b << Mor_pc;
      R__b << Mor_ps;
      R__b << Mor_tac;
      R__b << Mor;
      R__b << Pc;
      R__b << Ps;
      R__b << Tac;
      R__b << St;
      R__b << Clock_ug_2;
      R__b << Fcup_ug_2;
      R__b << Clock_g1;
      R__b << Fcup_g1;
      R__b << Mor_st_rg;
      R__b << Mor_pc_rg;
      R__b << Mor_ps_rg;
      R__b << Mor_tac_rg;
      R__b << Mor_rg;
      R__b << Pc_rg;
      R__b << Ps_rg;
      R__b << Tac_rg;
      R__b << St_rg;
      R__b << Clock_g1_2;
      R__b << Fcup_g1_2;
      R__b << Clock_g2;
      R__b << Fcup_g2;
      R__b << Mor_lg;
      R__b << Clock_g2_2;
      R__b << Fcup_g2_2;
      R__b << Trig1_ug;
      R__b << Trig2_ug;
      R__b << Trig3_ug;
      R__b << Trig4_ug;
      R__b << Trig5_ug;
      R__b << Trig6_ug;
      R__b << Trig7_ug;
      R__b << Trig8_ug;
      R__b << Trig9_ug;
      R__b << Trig10_ug;
      R__b << Trig11_ug;
      R__b << Trig12_ug;
      R__b << Trig_or_ug;
      R__b << L1accept;
      R__b << L2fail;
      R__b << L2pass;
      R__b << L2start;
      R__b << L2clear;
      R__b << L2accept;
      R__b << L3accept;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TTRGSClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TTRGSClass.
      TClass *R__cl = ::TTRGSClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clock_ug", &Clock_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcup_ug", &Fcup_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Microsec", &Microsec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_st", &Mor_st);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_pc", &Mor_pc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_ps", &Mor_ps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_tac", &Mor_tac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor", &Mor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pc", &Pc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ps", &Ps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tac", &Tac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "St", &St);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clock_ug_2", &Clock_ug_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcup_ug_2", &Fcup_ug_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clock_g1", &Clock_g1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcup_g1", &Fcup_g1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_st_rg", &Mor_st_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_pc_rg", &Mor_pc_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_ps_rg", &Mor_ps_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_tac_rg", &Mor_tac_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_rg", &Mor_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pc_rg", &Pc_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ps_rg", &Ps_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tac_rg", &Tac_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "St_rg", &St_rg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clock_g1_2", &Clock_g1_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcup_g1_2", &Fcup_g1_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clock_g2", &Clock_g2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcup_g2", &Fcup_g2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mor_lg", &Mor_lg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Clock_g2_2", &Clock_g2_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcup_g2_2", &Fcup_g2_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig1_ug", &Trig1_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig2_ug", &Trig2_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig3_ug", &Trig3_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig4_ug", &Trig4_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig5_ug", &Trig5_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig6_ug", &Trig6_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig7_ug", &Trig7_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig8_ug", &Trig8_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig9_ug", &Trig9_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig10_ug", &Trig10_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig11_ug", &Trig11_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig12_ug", &Trig12_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trig_or_ug", &Trig_or_ug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1accept", &L1accept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L2fail", &L2fail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L2pass", &L2pass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L2start", &L2start);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L2clear", &L2clear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L2accept", &L2accept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L3accept", &L3accept);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TTRGSClass(void *p) {
      return  p ? new(p) ::TTRGSClass : new ::TTRGSClass;
   }
   static void *newArray_TTRGSClass(Long_t nElements, void *p) {
      return p ? new(p) ::TTRGSClass[nElements] : new ::TTRGSClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTRGSClass(void *p) {
      delete ((::TTRGSClass*)p);
   }
   static void deleteArray_TTRGSClass(void *p) {
      delete [] ((::TTRGSClass*)p);
   }
   static void destruct_TTRGSClass(void *p) {
      typedef ::TTRGSClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TTRGSClass(TBuffer &buf, void *obj) {
      ((::TTRGSClass*)obj)->::TTRGSClass::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TTRGSClass

/********************************************************
* dicts/Linux64RHEL7/TTRGSClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTTRGSClassDict();

extern "C" void G__set_cpp_environmentTTRGSClassDict() {
  G__cpp_reset_tagtableTTRGSClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTTRGSClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TTRGSClass */
static int G__TTRGSClassDict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTRGSClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTRGSClass[n];
     } else {
       p = new((void*) gvp) TTRGSClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTRGSClass;
     } else {
       p = new((void*) gvp) TTRGSClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTRGSClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTRGSClass((TTRGSClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTRGSClass((TTRGSClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTRGSClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTRGSClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTRGSClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTRGSClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTRGSClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTRGSClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTRGSClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTRGSClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTRGSClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTRGSClassDict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTRGSClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TTRGSClassDict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTRGSClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTRGSClass(*(TTRGSClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTRGSClass G__TTTRGSClass;
static int G__TTRGSClassDict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTRGSClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTRGSClass*) (soff+(sizeof(TTRGSClass)*i)))->~G__TTTRGSClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTRGSClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTRGSClass*) (soff))->~G__TTTRGSClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TTRGSClassDict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTRGSClass* dest = (TTRGSClass*) G__getstructoffset();
   *dest = *(TTRGSClass*) libp->para[0].ref;
   const TTRGSClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TTRGSClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTTRGSClassDict {
 public:
  G__Sizep2memfuncTTRGSClassDict(): p(&G__Sizep2memfuncTTRGSClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTTRGSClassDict::*p)();
};

size_t G__get_sizep2memfuncTTRGSClassDict()
{
  G__Sizep2memfuncTTRGSClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTTRGSClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass))) {
     TTRGSClass *G__Lderived;
     G__Lderived=(TTRGSClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass),G__get_linked_tagnum(&G__TTRGSClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTTRGSClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TTRGSClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTRGSClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTRGSClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTRGSClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTRGSClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TTRGSClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTRGSClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTRGSClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTRGSClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTRGSClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TTRGSClass */
static void G__setup_memvarTTRGSClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass));
   { TTRGSClass *p; p=(TTRGSClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Clock_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Clock_ug=",0,"Ungated Clock                                         ");
   G__memvar_setup((void*)((long)(&p->Fcup_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Fcup_ug=",0,"FCUP UNGATED                                          ");
   G__memvar_setup((void*)((long)(&p->Microsec)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Microsec=",0,"microsecond clock (will overflow during normal run)   ");
   G__memvar_setup((void*)((long)(&p->Mor_st)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_st=",0,"MOR.ST                                                ");
   G__memvar_setup((void*)((long)(&p->Mor_pc)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_pc=",0,"MOR.PC                                                ");
   G__memvar_setup((void*)((long)(&p->Mor_ps)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_ps=",0,"MOR.PS                                                ");
   G__memvar_setup((void*)((long)(&p->Mor_tac)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_tac=",0,"MOR.TAC                                               ");
   G__memvar_setup((void*)((long)(&p->Mor)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor=",0,"Master OR                                             ");
   G__memvar_setup((void*)((long)(&p->Pc)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Pc=",0,"Pair Counter                                          ");
   G__memvar_setup((void*)((long)(&p->Ps)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Ps=",0,"Pair Spectrometer                                     ");
   G__memvar_setup((void*)((long)(&p->Tac)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Tac=",0,"Total Absorption Counter                              ");
   G__memvar_setup((void*)((long)(&p->St)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"St=",0,"ST                                                    ");
   G__memvar_setup((void*)((long)(&p->Clock_ug_2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Clock_ug_2=",0,"duplicate of channel 1                                ");
   G__memvar_setup((void*)((long)(&p->Fcup_ug_2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Fcup_ug_2=",0,"duplicate of channel 2                                ");
   G__memvar_setup((void*)((long)(&p->Clock_g1)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Clock_g1=",0,"Clock with run gatei                                  ");
   G__memvar_setup((void*)((long)(&p->Fcup_g1)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Fcup_g1=",0,"FCUP with Run Gate                                    ");
   G__memvar_setup((void*)((long)(&p->Mor_st_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_st_rg=",0,"MOR.ST  with run gate                                 ");
   G__memvar_setup((void*)((long)(&p->Mor_pc_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_pc_rg=",0,"MOR.PC with run gate                                  ");
   G__memvar_setup((void*)((long)(&p->Mor_ps_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_ps_rg=",0,"MOR.PS with run gate                                  ");
   G__memvar_setup((void*)((long)(&p->Mor_tac_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_tac_rg=",0,"MOR.TAC with run gate                                 ");
   G__memvar_setup((void*)((long)(&p->Mor_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_rg=",0,"MASTER_OR with run gate                               ");
   G__memvar_setup((void*)((long)(&p->Pc_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Pc_rg=",0,"PC with run gate                                      ");
   G__memvar_setup((void*)((long)(&p->Ps_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Ps_rg=",0,"PS with run gate                                      ");
   G__memvar_setup((void*)((long)(&p->Tac_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Tac_rg=",0,"TAC with run gate                                     ");
   G__memvar_setup((void*)((long)(&p->St_rg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"St_rg=",0,"ST  with run gate                                     ");
   G__memvar_setup((void*)((long)(&p->Clock_g1_2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Clock_g1_2=",0,"duplicate of channel 17                               ");
   G__memvar_setup((void*)((long)(&p->Fcup_g1_2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Fcup_g1_2=",0,"duplicate of channel 18                               ");
   G__memvar_setup((void*)((long)(&p->Clock_g2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Clock_g2=",0,"CLOCK with Live gate                                  ");
   G__memvar_setup((void*)((long)(&p->Fcup_g2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Fcup_g2=",0,"FCUP with Live gate                                   ");
   G__memvar_setup((void*)((long)(&p->Mor_lg)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Mor_lg=",0,"MASTER_OR with Live gate                              ");
   G__memvar_setup((void*)((long)(&p->Clock_g2_2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Clock_g2_2=",0,"duplicate of channel 33                               ");
   G__memvar_setup((void*)((long)(&p->Fcup_g2_2)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Fcup_g2_2=",0,"duplicate of channel 34                               ");
   G__memvar_setup((void*)((long)(&p->Trig1_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig1_ug=",0,"Trigger 1 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig2_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig2_ug=",0,"Trigger 2 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig3_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig3_ug=",0,"Trigger 3 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig4_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig4_ug=",0,"Trigger 4 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig5_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig5_ug=",0,"Trigger 5 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig6_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig6_ug=",0,"Trigger 6 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig7_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig7_ug=",0,"Trigger 7 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig8_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig8_ug=",0,"Trigger 8 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig9_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig9_ug=",0,"Trigger 9 ungated, prescaled                          ");
   G__memvar_setup((void*)((long)(&p->Trig10_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig10_ug=",0,"Trigger 10 ungated, prescaled                         ");
   G__memvar_setup((void*)((long)(&p->Trig11_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig11_ug=",0,"Trigger 11 ungated, prescaled                         ");
   G__memvar_setup((void*)((long)(&p->Trig12_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig12_ug=",0,"Trigger 12 ungated, prescaled                         ");
   G__memvar_setup((void*)((long)(&p->Trig_or_ug)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Trig_or_ug=",0,"Trigger OR of 1-12 ungated,                           ");
   G__memvar_setup((void*)((long)(&p->L1accept)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L1accept=",0,"Level 1 accept                                        ");
   G__memvar_setup((void*)((long)(&p->L2fail)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L2fail=",0,"Level2 fail                                           ");
   G__memvar_setup((void*)((long)(&p->L2pass)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L2pass=",0,"Level2 pass                                           ");
   G__memvar_setup((void*)((long)(&p->L2start)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L2start=",0,"Level2 start                                          ");
   G__memvar_setup((void*)((long)(&p->L2clear)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L2clear=",0,"Level2 clear                                          ");
   G__memvar_setup((void*)((long)(&p->L2accept)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L2accept=",0,"Level2 accept                                         ");
   G__memvar_setup((void*)((long)(&p->L3accept)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"L3accept=",0,"Level3 accept                                         ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TTRGSClassDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTTRGSClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTTRGSClass(void) {
   /* TTRGSClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass));
   G__memfunc_setup("TTRGSClass",906,G__TTRGSClassDict_184_0_1, 105, G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTRGSClass",906,G__TTRGSClassDict_184_0_2, 105, G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass), -1, 0, 1, 1, 1, 0, "U 'TTRGSClass' - 0 - TmpTRGS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TTRGSClassDict_184_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TTRGSClassDict_184_0_4, 85, G__get_linked_tagnum(&G__TTRGSClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTRGSClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TTRGSClassDict_184_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTRGSClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TTRGSClassDict_184_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTRGSClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TTRGSClassDict_184_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTRGSClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TTRGSClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TTRGSClassDict_184_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TTRGSClassDict_184_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTRGSClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TTRGSClassDict_184_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTRGSClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TTRGSClassDict_184_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTRGSClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TTRGSClassDict_184_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTRGSClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTRGSClass", 906, G__TTRGSClassDict_184_0_16, (int) ('i'), G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass), -1, 0, 1, 1, 1, 0, "u 'TTRGSClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTRGSClass", 1032, G__TTRGSClassDict_184_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TTRGSClassDict_184_0_18, (int) ('u'), G__get_linked_tagnum(&G__TTRGSClassDictLN_TTRGSClass), -1, 1, 1, 1, 1, 0, "u 'TTRGSClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTTRGSClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTTRGSClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTTRGSClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TTRGSClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTRGSClassDictLN_TTRGSClass = { "TTRGSClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTTRGSClassDict() {
  G__TTRGSClassDictLN_TClass.tagnum = -1 ;
  G__TTRGSClassDictLN_TBuffer.tagnum = -1 ;
  G__TTRGSClassDictLN_TMemberInspector.tagnum = -1 ;
  G__TTRGSClassDictLN_TObject.tagnum = -1 ;
  G__TTRGSClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TTRGSClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTRGSClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TTRGSClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTRGSClassDictLN_TTRGSClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTTRGSClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TTRGSClassDictLN_TTRGSClass),sizeof(TTRGSClass),-1,62720,"Scaler bank TRGS for trigger, MOR and counters.",G__setup_memvarTTRGSClass,G__setup_memfuncTTRGSClass);
}
extern "C" void G__cpp_setupTTRGSClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTTRGSClassDict()");
  G__set_cpp_environmentTTRGSClassDict();
  G__cpp_setup_tagtableTTRGSClassDict();

  G__cpp_setup_inheritanceTTRGSClassDict();

  G__cpp_setup_typetableTTRGSClassDict();

  G__cpp_setup_memvarTTRGSClassDict();

  G__cpp_setup_memfuncTTRGSClassDict();
  G__cpp_setup_globalTTRGSClassDict();
  G__cpp_setup_funcTTRGSClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTTRGSClassDict();
  return;
}
class G__cpp_setup_initTTRGSClassDict {
  public:
    G__cpp_setup_initTTRGSClassDict() { G__add_setup_func("TTRGSClassDict",(G__incsetup)(&G__cpp_setupTTRGSClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTTRGSClassDict() { G__remove_setup_func("TTRGSClassDict"); }
};
G__cpp_setup_initTTRGSClassDict G__cpp_setup_initializerTTRGSClassDict;

