//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:38:39 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITECPBClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TECPBClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TECPBClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TECPBClass(void *p = 0);
   static void *newArray_TECPBClass(Long_t size, void *p);
   static void delete_TECPBClass(void *p);
   static void deleteArray_TECPBClass(void *p);
   static void destruct_TECPBClass(void *p);
   static void streamer_TECPBClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TECPBClass*)
   {
      ::TECPBClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TECPBClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TECPBClass", ::TECPBClass::Class_Version(), "./TECPBClass.h", 23,
                  typeid(::TECPBClass), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TECPBClass::Dictionary, isa_proxy, 0,
                  sizeof(::TECPBClass) );
      instance.SetNew(&new_TECPBClass);
      instance.SetNewArray(&newArray_TECPBClass);
      instance.SetDelete(&delete_TECPBClass);
      instance.SetDeleteArray(&deleteArray_TECPBClass);
      instance.SetDestructor(&destruct_TECPBClass);
      instance.SetStreamerFunc(&streamer_TECPBClass);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TECPBClass*)
   {
      return GenerateInitInstanceLocal((::TECPBClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TECPBClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TECPBClass::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TECPBClass::Class_Name()
{
   return "TECPBClass";
}

//______________________________________________________________________________
const char *TECPBClass::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TECPBClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TECPBClass::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TECPBClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TECPBClass::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TECPBClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TECPBClass::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TECPBClass*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TECPBClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TECPBClass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> Scht;
      R__b >> Etot;
      R__b >> Ein;
      R__b >> Eout;
      R__b >> Time;
      R__b >> Path;
      R__b >> X;
      R__b >> Y;
      R__b >> Z;
      R__b >> M2_hit;
      R__b >> M3_hit;
      R__b >> M4_hit;
      R__b >> Innstr;
      R__b >> Outstr;
      R__b >> Chi2ec;
      R__b >> Status;
      R__b.CheckByteCount(R__s, R__c, TECPBClass::IsA());
   } else {
      R__c = R__b.WriteVersion(TECPBClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << Scht;
      R__b << Etot;
      R__b << Ein;
      R__b << Eout;
      R__b << Time;
      R__b << Path;
      R__b << X;
      R__b << Y;
      R__b << Z;
      R__b << M2_hit;
      R__b << M3_hit;
      R__b << M4_hit;
      R__b << Innstr;
      R__b << Outstr;
      R__b << Chi2ec;
      R__b << Status;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TECPBClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TECPBClass.
      TClass *R__cl = ::TECPBClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Scht", &Scht);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Etot", &Etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ein", &Ein);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eout", &Eout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Path", &Path);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y", &Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z", &Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M2_hit", &M2_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M3_hit", &M3_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M4_hit", &M4_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Innstr", &Innstr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Outstr", &Outstr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2ec", &Chi2ec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TECPBClass(void *p) {
      return  p ? new(p) ::TECPBClass : new ::TECPBClass;
   }
   static void *newArray_TECPBClass(Long_t nElements, void *p) {
      return p ? new(p) ::TECPBClass[nElements] : new ::TECPBClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TECPBClass(void *p) {
      delete ((::TECPBClass*)p);
   }
   static void deleteArray_TECPBClass(void *p) {
      delete [] ((::TECPBClass*)p);
   }
   static void destruct_TECPBClass(void *p) {
      typedef ::TECPBClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TECPBClass(TBuffer &buf, void *obj) {
      ((::TECPBClass*)obj)->::TECPBClass::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TECPBClass

/********************************************************
* dicts/Linux64RHEL7/TECPBClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTECPBClassDict();

extern "C" void G__set_cpp_environmentTECPBClassDict() {
  G__cpp_reset_tagtableTECPBClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTECPBClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TECPBClass */
static int G__TECPBClassDict_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TECPBClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TECPBClass[n];
     } else {
       p = new((void*) gvp) TECPBClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TECPBClass;
     } else {
       p = new((void*) gvp) TECPBClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TECPBClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TECPBClass((TECPBClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TECPBClass((TECPBClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TECPBClass*) G__getstructoffset())->GetScht());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetEtot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetEin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetEout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetPath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetM2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetM3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetM4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TECPBClass*) G__getstructoffset())->GetInnstr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TECPBClass*) G__getstructoffset())->GetOutstr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TECPBClass*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TECPBClass*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TECPBClass*) G__getstructoffset())->GetHitPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TECPBClass*) G__getstructoffset())->GetSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TECPBClass*) G__getstructoffset())->GetHitId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TECPBClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TECPBClass*) G__getstructoffset())->GetUVW((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), *((TVector3*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TECPBClass*) G__getstructoffset())->GetUVW((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TECPBClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TECPBClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TECPBClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TECPBClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TECPBClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TECPBClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TECPBClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TECPBClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TECPBClassDict_221_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TECPBClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TECPBClassDict_221_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TECPBClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TECPBClass(*(TECPBClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TECPBClass G__TTECPBClass;
static int G__TECPBClassDict_221_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TECPBClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TECPBClass*) (soff+(sizeof(TECPBClass)*i)))->~G__TTECPBClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TECPBClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TECPBClass*) (soff))->~G__TTECPBClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TECPBClassDict_221_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TECPBClass* dest = (TECPBClass*) G__getstructoffset();
   *dest = *(TECPBClass*) libp->para[0].ref;
   const TECPBClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TECPBClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTECPBClassDict {
 public:
  G__Sizep2memfuncTECPBClassDict(): p(&G__Sizep2memfuncTECPBClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTECPBClassDict::*p)();
};

size_t G__get_sizep2memfuncTECPBClassDict()
{
  G__Sizep2memfuncTECPBClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTECPBClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass))) {
     TECPBClass *G__Lderived;
     G__Lderived=(TECPBClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass),G__get_linked_tagnum(&G__TECPBClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTECPBClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TECPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TECPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TECPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TECPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TECPBClassDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TECPBClass */
static void G__setup_memvarTECPBClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass));
   { TECPBClass *p; p=(TECPBClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Scht)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Scht=",0,"100*sector+Whole_Hit_ID in ECHB ");
   G__memvar_setup((void*)((long)(&p->Etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Etot=",0,"Reconstructed total energy");
   G__memvar_setup((void*)((long)(&p->Ein)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Ein=",0,"Inner energy");
   G__memvar_setup((void*)((long)(&p->Eout)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Eout=",0,"Outer energy ");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Time=",0,"Flight time relative to the evnt start time");
   G__memvar_setup((void*)((long)(&p->Path)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Path=",0,"Path lenght from target");
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X=",0,"x coordinate of hit ");
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Y=",0,"y coordinate of hit");
   G__memvar_setup((void*)((long)(&p->Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Z=",0,"z coordinate of hit");
   G__memvar_setup((void*)((long)(&p->M2_hit)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"M2_hit=",0,"second moment of _hit pattern");
   G__memvar_setup((void*)((long)(&p->M3_hit)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"M3_hit=",0,"third moment of  _hit pattern ");
   G__memvar_setup((void*)((long)(&p->M4_hit)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"M4_hit=",0,"forth moment of  _hit pattern ");
   G__memvar_setup((void*)((long)(&p->Innstr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Innstr=",0,"10000*UI+100*VI+WI ");
   G__memvar_setup((void*)((long)(&p->Outstr)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Outstr=",0,"10000*UO+100*VO+WO ");
   G__memvar_setup((void*)((long)(&p->Chi2ec)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Chi2ec=",0,"Quality measure of geometrical matching");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Status=",0,"Status word (not implemented yet)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TECPBClassDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTECPBClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTECPBClass(void) {
   /* TECPBClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass));
   G__memfunc_setup("TECPBClass",868,G__TECPBClassDict_221_0_1, 105, G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TECPBClass",868,G__TECPBClassDict_221_0_2, 105, G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass), -1, 0, 1, 1, 1, 0, "U 'TECPBClass' - 0 - TmpECPB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScht",690,G__TECPBClassDict_221_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtot",700,G__TECPBClassDict_221_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEin",572,G__TECPBClassDict_221_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEout",701,G__TECPBClassDict_221_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__TECPBClassDict_221_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPath",685,G__TECPBClassDict_221_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__TECPBClassDict_221_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__TECPBClassDict_221_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__TECPBClassDict_221_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM2",415,G__TECPBClassDict_221_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM3",416,G__TECPBClassDict_221_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM4",417,G__TECPBClassDict_221_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInnstr",926,G__TECPBClassDict_221_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutstr",945,G__TECPBClassDict_221_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__TECPBClassDict_221_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__TECPBClassDict_221_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPos",887,G__TECPBClassDict_221_0_19, 117, G__get_linked_tagnum(&G__TECPBClassDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSector",912,G__TECPBClassDict_221_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitId",754,G__TECPBClassDict_221_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TECPBClassDict_221_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUVW",546,G__TECPBClassDict_221_0_23, 121, -1, -1, 0, 4, 1, 1, 0, 
"F - 'Float_t' 0 - u F - 'Float_t' 0 - v "
"F - 'Float_t' 0 - w u 'TVector3' - 0 - Detco", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUVW",546,G__TECPBClassDict_221_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"F - 'Float_t' 0 - u F - 'Float_t' 0 - v "
"F - 'Float_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TECPBClassDict_221_0_25, 85, G__get_linked_tagnum(&G__TECPBClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TECPBClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TECPBClassDict_221_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TECPBClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TECPBClassDict_221_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TECPBClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TECPBClassDict_221_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TECPBClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TECPBClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TECPBClassDict_221_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TECPBClassDict_221_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TECPBClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TECPBClassDict_221_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TECPBClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TECPBClassDict_221_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TECPBClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TECPBClassDict_221_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TECPBClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TECPBClass", 868, G__TECPBClassDict_221_0_37, (int) ('i'), G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass), -1, 0, 1, 1, 1, 0, "u 'TECPBClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TECPBClass", 994, G__TECPBClassDict_221_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TECPBClassDict_221_0_39, (int) ('u'), G__get_linked_tagnum(&G__TECPBClassDictLN_TECPBClass), -1, 1, 1, 1, 1, 0, "u 'TECPBClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTECPBClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTECPBClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTECPBClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TECPBClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TECPBClassDictLN_TECPBClass = { "TECPBClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTECPBClassDict() {
  G__TECPBClassDictLN_TClass.tagnum = -1 ;
  G__TECPBClassDictLN_TBuffer.tagnum = -1 ;
  G__TECPBClassDictLN_TMemberInspector.tagnum = -1 ;
  G__TECPBClassDictLN_TObject.tagnum = -1 ;
  G__TECPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TECPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TECPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TECPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TECPBClassDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TECPBClassDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TECPBClassDictLN_TVector3.tagnum = -1 ;
  G__TECPBClassDictLN_TECPBClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTECPBClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TECPBClassDictLN_TECPBClass),sizeof(TECPBClass),-1,62720,"Class for accessing the ECPB bank: Calorimeter",G__setup_memvarTECPBClass,G__setup_memfuncTECPBClass);
}
extern "C" void G__cpp_setupTECPBClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTECPBClassDict()");
  G__set_cpp_environmentTECPBClassDict();
  G__cpp_setup_tagtableTECPBClassDict();

  G__cpp_setup_inheritanceTECPBClassDict();

  G__cpp_setup_typetableTECPBClassDict();

  G__cpp_setup_memvarTECPBClassDict();

  G__cpp_setup_memfuncTECPBClassDict();
  G__cpp_setup_globalTECPBClassDict();
  G__cpp_setup_funcTECPBClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTECPBClassDict();
  return;
}
class G__cpp_setup_initTECPBClassDict {
  public:
    G__cpp_setup_initTECPBClassDict() { G__add_setup_func("TECPBClassDict",(G__incsetup)(&G__cpp_setupTECPBClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTECPBClassDict() { G__remove_setup_func("TECPBClassDict"); }
};
G__cpp_setup_initTECPBClassDict G__cpp_setup_initializerTECPBClassDict;

