//
// File generated by /u/apps/root/5.34.36/root/bin/rootcint at Fri Feb 24 17:38:42 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL7dITHEADERClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "THEADERClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void THEADERClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THEADERClass(void *p = 0);
   static void *newArray_THEADERClass(Long_t size, void *p);
   static void delete_THEADERClass(void *p);
   static void deleteArray_THEADERClass(void *p);
   static void destruct_THEADERClass(void *p);
   static void streamer_THEADERClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THEADERClass*)
   {
      ::THEADERClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THEADERClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THEADERClass", ::THEADERClass::Class_Version(), "./THEADERClass.h", 20,
                  typeid(::THEADERClass), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THEADERClass::Dictionary, isa_proxy, 1,
                  sizeof(::THEADERClass) );
      instance.SetNew(&new_THEADERClass);
      instance.SetNewArray(&newArray_THEADERClass);
      instance.SetDelete(&delete_THEADERClass);
      instance.SetDeleteArray(&deleteArray_THEADERClass);
      instance.SetDestructor(&destruct_THEADERClass);
      instance.SetStreamerFunc(&streamer_THEADERClass);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THEADERClass*)
   {
      return GenerateInitInstanceLocal((::THEADERClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THEADERClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr THEADERClass::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THEADERClass::Class_Name()
{
   return "THEADERClass";
}

//______________________________________________________________________________
const char *THEADERClass::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THEADERClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THEADERClass::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THEADERClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THEADERClass::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THEADERClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THEADERClass::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THEADERClass*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void THEADERClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THEADERClass.
      TClass *R__cl = ::THEADERClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NRun", &NRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEvent", &NEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type", &Type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ROC", &ROC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtClas", &EvtClas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrigBits", &TrigBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EStatus", &EStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgPrs", &TrgPrs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPGP", &NPGP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FC", &FC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FCG", &FCG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TG", &TG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "STT", &STT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RF1", &RF1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RF2", &RF2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Latch1", &Latch1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Helicity_Scaler", &Helicity_Scaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Interrupt_Time", &Interrupt_Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Level2", &Level2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Level3", &Level3);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THEADERClass(void *p) {
      return  p ? new(p) ::THEADERClass : new ::THEADERClass;
   }
   static void *newArray_THEADERClass(Long_t nElements, void *p) {
      return p ? new(p) ::THEADERClass[nElements] : new ::THEADERClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_THEADERClass(void *p) {
      delete ((::THEADERClass*)p);
   }
   static void deleteArray_THEADERClass(void *p) {
      delete [] ((::THEADERClass*)p);
   }
   static void destruct_THEADERClass(void *p) {
      typedef ::THEADERClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_THEADERClass(TBuffer &buf, void *obj) {
      ((::THEADERClass*)obj)->::THEADERClass::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::THEADERClass

/********************************************************
* dicts/Linux64RHEL7/THEADERClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTHEADERClassDict();

extern "C" void G__set_cpp_environmentTHEADERClassDict() {
  G__cpp_reset_tagtableTHEADERClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTHEADERClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* THEADERClass */
static int G__THEADERClassDict_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THEADERClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THEADERClass[n];
     } else {
       p = new((void*) gvp) THEADERClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THEADERClass;
     } else {
       p = new((void*) gvp) THEADERClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THEADERClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THEADERClass((THEADERClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) THEADERClass((THEADERClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THEADERClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetRunNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetNEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetROC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetEvtClas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetTrigBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetEStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetTrgPrs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetNPGP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THEADERClass*) G__getstructoffset())->GetFC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THEADERClass*) G__getstructoffset())->GetFCG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THEADERClass*) G__getstructoffset())->GetTG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THEADERClass*) G__getstructoffset())->GetSTT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THEADERClass*) G__getstructoffset())->GetRF1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THEADERClass*) G__getstructoffset())->GetRF2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetLatch1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetHS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetIT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetLevel2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THEADERClass*) G__getstructoffset())->GetLevel3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THEADERClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THEADERClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THEADERClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THEADERClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THEADERClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THEADERClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THEADERClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THEADERClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THEADERClassDict_192_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THEADERClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__THEADERClassDict_192_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THEADERClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THEADERClass(*(THEADERClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THEADERClass G__TTHEADERClass;
static int G__THEADERClassDict_192_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THEADERClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THEADERClass*) (soff+(sizeof(THEADERClass)*i)))->~G__TTHEADERClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THEADERClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THEADERClass*) (soff))->~G__TTHEADERClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__THEADERClassDict_192_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THEADERClass* dest = (THEADERClass*) G__getstructoffset();
   *dest = *(THEADERClass*) libp->para[0].ref;
   const THEADERClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* THEADERClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTHEADERClassDict {
 public:
  G__Sizep2memfuncTHEADERClassDict(): p(&G__Sizep2memfuncTHEADERClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTHEADERClassDict::*p)();
};

size_t G__get_sizep2memfuncTHEADERClassDict()
{
  G__Sizep2memfuncTHEADERClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTHEADERClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass))) {
     THEADERClass *G__Lderived;
     G__Lderived=(THEADERClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass),G__get_linked_tagnum(&G__THEADERClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTHEADERClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THEADERClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THEADERClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THEADERClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THEADERClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* THEADERClass */
static void G__setup_memvarTHEADERClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass));
   { THEADERClass *p; p=(THEADERClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NRun)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NRun=",0,"Run number from HEAD bank.");
   G__memvar_setup((void*)((long)(&p->NEvent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NEvent=",0,"Event number from HEAD bank.");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Time=",0,"Unix time from HEAD bank.");
   G__memvar_setup((void*)((long)(&p->Type)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Type=",0,"Event type from HEAD bank.");
   G__memvar_setup((void*)((long)(&p->ROC)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ROC=",0,"ROC status from HEAD bank.");
   G__memvar_setup((void*)((long)(&p->EvtClas)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EvtClas=",0,"Event Type: 1-9 Physics event (2= sync, 4=level2 late fail) 10 Scaler event. < 0 Monte Carlo");
   G__memvar_setup((void*)((long)(&p->TrigBits)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TrigBits=",0,"Level 1 Trigger Latch word.");
   G__memvar_setup((void*)((long)(&p->EStatus)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EStatus=",0,"Event status after reconstruction (HEVT)");
   G__memvar_setup((void*)((long)(&p->TrgPrs)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"TrgPrs=",0,"Trigger type*10000 + Prescale factor for that trigger (Event Class) (HEVT)");
   G__memvar_setup((void*)((long)(&p->NPGP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NPGP=",0,"Number of final reconstructed particles*100 + Number of geometrically reconstructed particles (HEVT)");
   G__memvar_setup((void*)((long)(&p->FC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"FC=",0,"Faraday Cup (K) (HEVT)");
   G__memvar_setup((void*)((long)(&p->FCG)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"FCG=",0,"Gated Faraday Cup (HEVT)");
   G__memvar_setup((void*)((long)(&p->TG)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"TG=",0,"Gated Clock (HEVT)");
   G__memvar_setup((void*)((long)(&p->STT)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"STT=",0,"Event start time (HEVT)");
   G__memvar_setup((void*)((long)(&p->RF1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"RF1=",0,"RF time (HEVT)");
   G__memvar_setup((void*)((long)(&p->RF2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"RF2=",0,"RF time (HEVT)");
   G__memvar_setup((void*)((long)(&p->Latch1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Latch1=",0,"Trigger Latch from TGBI Bank (helicity info)");
   G__memvar_setup((void*)((long)(&p->Helicity_Scaler)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Helicity_Scaler=",0,"Helicity scaler from TGBI Bank.");
   G__memvar_setup((void*)((long)(&p->Interrupt_Time)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Interrupt_Time=",0,"Microsecond Interupt time from TGBI Bank.");
   G__memvar_setup((void*)((long)(&p->Level2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Level2=",0,"bits: 1-8:LVL2 sector bits,  9-12:Not Used, 13: LVL2 fail, 14: LVL2 pass, 15: LVL2 fail, 16: LVL2 pass");
   G__memvar_setup((void*)((long)(&p->Level3)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Level3=",0,"bits: 1-6:LVL3 sector bits,  7-24:Not Used, 25-32: Version number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__THEADERClassDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTHEADERClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTHEADERClass(void) {
   /* THEADERClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass));
   G__memfunc_setup("THEADERClass",1011,G__THEADERClassDict_192_0_1, 105, G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THEADERClass",1011,G__THEADERClassDict_192_0_2, 105, G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass), -1, 0, 1, 1, 1, 0, "U 'THEADERClass' - 0 - TmpHEADER", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__THEADERClassDict_192_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNum",901,G__THEADERClassDict_192_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEvent",880,G__THEADERClassDict_192_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__THEADERClassDict_192_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__THEADERClassDict_192_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetROC",516,G__THEADERClassDict_192_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvtClas",978,G__THEADERClassDict_192_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigBits",1096,G__THEADERClassDict_192_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEStatus",1001,G__THEADERClassDict_192_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrgPrs",898,G__THEADERClassDict_192_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPGP",597,G__THEADERClassDict_192_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFC",425,G__THEADERClassDict_192_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCG",496,G__THEADERClassDict_192_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTG",443,G__THEADERClassDict_192_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSTT",539,G__THEADERClassDict_192_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRF1",489,G__THEADERClassDict_192_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRF2",490,G__THEADERClassDict_192_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLatch1",829,G__THEADERClassDict_192_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHS",443,G__THEADERClassDict_192_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIT",445,G__THEADERClassDict_192_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevel2",842,G__THEADERClassDict_192_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevel3",843,G__THEADERClassDict_192_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__THEADERClassDict_192_0_25, 85, G__get_linked_tagnum(&G__THEADERClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THEADERClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__THEADERClassDict_192_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THEADERClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__THEADERClassDict_192_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THEADERClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__THEADERClassDict_192_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THEADERClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__THEADERClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__THEADERClassDict_192_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__THEADERClassDict_192_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THEADERClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__THEADERClassDict_192_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THEADERClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__THEADERClassDict_192_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THEADERClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__THEADERClassDict_192_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THEADERClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THEADERClass", 1011, G__THEADERClassDict_192_0_37, (int) ('i'), G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass), -1, 0, 1, 1, 1, 0, "u 'THEADERClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THEADERClass", 1137, G__THEADERClassDict_192_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__THEADERClassDict_192_0_39, (int) ('u'), G__get_linked_tagnum(&G__THEADERClassDictLN_THEADERClass), -1, 1, 1, 1, 1, 0, "u 'THEADERClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTHEADERClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTHEADERClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTHEADERClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__THEADERClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__THEADERClassDictLN_THEADERClass = { "THEADERClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTHEADERClassDict() {
  G__THEADERClassDictLN_TClass.tagnum = -1 ;
  G__THEADERClassDictLN_TBuffer.tagnum = -1 ;
  G__THEADERClassDictLN_TMemberInspector.tagnum = -1 ;
  G__THEADERClassDictLN_TObject.tagnum = -1 ;
  G__THEADERClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__THEADERClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__THEADERClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__THEADERClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__THEADERClassDictLN_THEADERClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTHEADERClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__THEADERClassDictLN_THEADERClass),sizeof(THEADERClass),-1,128256,"Class containing all the header information for an event.",G__setup_memvarTHEADERClass,G__setup_memfuncTHEADERClass);
}
extern "C" void G__cpp_setupTHEADERClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTHEADERClassDict()");
  G__set_cpp_environmentTHEADERClassDict();
  G__cpp_setup_tagtableTHEADERClassDict();

  G__cpp_setup_inheritanceTHEADERClassDict();

  G__cpp_setup_typetableTHEADERClassDict();

  G__cpp_setup_memvarTHEADERClassDict();

  G__cpp_setup_memfuncTHEADERClassDict();
  G__cpp_setup_globalTHEADERClassDict();
  G__cpp_setup_funcTHEADERClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTHEADERClassDict();
  return;
}
class G__cpp_setup_initTHEADERClassDict {
  public:
    G__cpp_setup_initTHEADERClassDict() { G__add_setup_func("THEADERClassDict",(G__incsetup)(&G__cpp_setupTHEADERClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTHEADERClassDict() { G__remove_setup_func("THEADERClassDict"); }
};
G__cpp_setup_initTHEADERClassDict G__cpp_setup_initializerTHEADERClassDict;

