//
// File generated by /u/apps/root/5.34.13/root/bin/rootcint at Fri Jan 20 19:15:44 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL6dITTBIDClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TTBIDClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TTBIDClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TTBIDClass(void *p = 0);
   static void *newArray_TTBIDClass(Long_t size, void *p);
   static void delete_TTBIDClass(void *p);
   static void deleteArray_TTBIDClass(void *p);
   static void destruct_TTBIDClass(void *p);
   static void streamer_TTBIDClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTBIDClass*)
   {
      ::TTBIDClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTBIDClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTBIDClass", ::TTBIDClass::Class_Version(), "./TTBIDClass.h", 10,
                  typeid(::TTBIDClass), DefineBehavior(ptr, ptr),
                  &::TTBIDClass::Dictionary, isa_proxy, 0,
                  sizeof(::TTBIDClass) );
      instance.SetNew(&new_TTBIDClass);
      instance.SetNewArray(&newArray_TTBIDClass);
      instance.SetDelete(&delete_TTBIDClass);
      instance.SetDeleteArray(&deleteArray_TTBIDClass);
      instance.SetDestructor(&destruct_TTBIDClass);
      instance.SetStreamerFunc(&streamer_TTBIDClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTBIDClass*)
   {
      return GenerateInitInstanceLocal((::TTBIDClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTBIDClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TTBIDClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTBIDClass::Class_Name()
{
   return "TTBIDClass";
}

//______________________________________________________________________________
const char *TTBIDClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTBIDClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTBIDClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTBIDClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTBIDClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTBIDClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTBIDClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTBIDClass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TTBIDClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTBIDClass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> track;
      R__b >> sec;
      R__b >> beta;
      R__b >> vtime;
      R__b >> sc_stat;
      R__b >> sc_id;
      R__b >> sc_time;
      R__b >> sc_qual;
      R__b >> sc_vtime;
      R__b >> sc_beta;
      R__b >> cc_stat;
      R__b >> cc_id;
      R__b >> cc_time;
      R__b >> cc_qual;
      R__b >> cc_vtime;
      R__b >> cc_beta;
      R__b >> ec_stat;
      R__b >> ec_id;
      R__b >> ec_time;
      R__b >> ec_qual;
      R__b >> ec_vtime;
      R__b >> ec_beta;
      R__b >> st_stat;
      R__b >> st_id;
      R__b >> st_time;
      R__b >> st_qual;
      R__b >> st_vtime;
      R__b >> st_beta;
      R__b >> lac_stat;
      R__b >> lac_id;
      R__b >> lac_time;
      R__b >> lac_qual;
      R__b >> lac_vtime;
      R__b >> lac_beta;
      R__b.CheckByteCount(R__s, R__c, TTBIDClass::IsA());
   } else {
      R__c = R__b.WriteVersion(TTBIDClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << track;
      R__b << sec;
      R__b << beta;
      R__b << vtime;
      R__b << sc_stat;
      R__b << sc_id;
      R__b << sc_time;
      R__b << sc_qual;
      R__b << sc_vtime;
      R__b << sc_beta;
      R__b << cc_stat;
      R__b << cc_id;
      R__b << cc_time;
      R__b << cc_qual;
      R__b << cc_vtime;
      R__b << cc_beta;
      R__b << ec_stat;
      R__b << ec_id;
      R__b << ec_time;
      R__b << ec_qual;
      R__b << ec_vtime;
      R__b << ec_beta;
      R__b << st_stat;
      R__b << st_id;
      R__b << st_time;
      R__b << st_qual;
      R__b << st_vtime;
      R__b << st_beta;
      R__b << lac_stat;
      R__b << lac_id;
      R__b << lac_time;
      R__b << lac_qual;
      R__b << lac_vtime;
      R__b << lac_beta;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TTBIDClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TTBIDClass.
      TClass *R__cl = ::TTBIDClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "track", &track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sec", &sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtime", &vtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_stat", &sc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_id", &sc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_time", &sc_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_qual", &sc_qual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_vtime", &sc_vtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_beta", &sc_beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_stat", &cc_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_id", &cc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_time", &cc_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_qual", &cc_qual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_vtime", &cc_vtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc_beta", &cc_beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_stat", &ec_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_id", &ec_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_time", &ec_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_qual", &ec_qual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_vtime", &ec_vtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ec_beta", &ec_beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st_stat", &st_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st_id", &st_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st_time", &st_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st_qual", &st_qual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st_vtime", &st_vtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "st_beta", &st_beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lac_stat", &lac_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lac_id", &lac_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lac_time", &lac_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lac_qual", &lac_qual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lac_vtime", &lac_vtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lac_beta", &lac_beta);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTBIDClass(void *p) {
      return  p ? new(p) ::TTBIDClass : new ::TTBIDClass;
   }
   static void *newArray_TTBIDClass(Long_t nElements, void *p) {
      return p ? new(p) ::TTBIDClass[nElements] : new ::TTBIDClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTBIDClass(void *p) {
      delete ((::TTBIDClass*)p);
   }
   static void deleteArray_TTBIDClass(void *p) {
      delete [] ((::TTBIDClass*)p);
   }
   static void destruct_TTBIDClass(void *p) {
      typedef ::TTBIDClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TTBIDClass(TBuffer &buf, void *obj) {
      ((::TTBIDClass*)obj)->::TTBIDClass::Streamer(buf);
   }
} // end of namespace ROOT for class ::TTBIDClass

/********************************************************
* dicts/Linux64RHEL6/TTBIDClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTTBIDClassDict();

extern "C" void G__set_cpp_environmentTTBIDClassDict() {
  G__cpp_reset_tagtableTTBIDClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTTBIDClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TTBIDClass */
static int G__TTBIDClassDict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTBIDClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTBIDClass[n];
     } else {
       p = new((void*) gvp) TTBIDClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTBIDClass;
     } else {
       p = new((void*) gvp) TTBIDClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTBIDClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTBIDClass((TTBIDClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTBIDClass((TTBIDClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetVtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetSc_stat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetSc_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSc_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSc_qual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSc_vtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSc_beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetCc_stat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetCc_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetCc_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetCc_qual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetCc_vtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetCc_beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetEc_stat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetEc_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetEc_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetEc_qual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetEc_vtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetEc_beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetSt_stat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetSt_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSt_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSt_qual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSt_vtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetSt_beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetLac_stat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBIDClass*) G__getstructoffset())->GetLac_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetLac_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetLac_qual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetLac_vtime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBIDClass*) G__getstructoffset())->GetLac_beta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTBIDClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTBIDClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTBIDClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTBIDClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTBIDClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTBIDClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTBIDClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTBIDClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTBIDClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBIDClassDict_183_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTBIDClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TTBIDClassDict_183_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTBIDClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTBIDClass(*(TTBIDClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTBIDClass G__TTTBIDClass;
static int G__TTBIDClassDict_183_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTBIDClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTBIDClass*) (soff+(sizeof(TTBIDClass)*i)))->~G__TTTBIDClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTBIDClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTBIDClass*) (soff))->~G__TTTBIDClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TTBIDClassDict_183_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTBIDClass* dest = (TTBIDClass*) G__getstructoffset();
   *dest = *(TTBIDClass*) libp->para[0].ref;
   const TTBIDClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TTBIDClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTTBIDClassDict {
 public:
  G__Sizep2memfuncTTBIDClassDict(): p(&G__Sizep2memfuncTTBIDClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTTBIDClassDict::*p)();
};

size_t G__get_sizep2memfuncTTBIDClassDict()
{
  G__Sizep2memfuncTTBIDClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTTBIDClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass))) {
     TTBIDClass *G__Lderived;
     G__Lderived=(TTBIDClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass),G__get_linked_tagnum(&G__TTBIDClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTTBIDClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TTBIDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTBIDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBIDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTBIDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBIDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TTBIDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTBIDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBIDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTBIDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBIDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TTBIDClass */
static void G__setup_memvarTTBIDClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass));
   { TTBIDClass *p; p=(TTBIDClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->track)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"track=",0,"Track (index to TBTR) or zero if neutral");
   G__memvar_setup((void*)((long)(&p->sec)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sec=",0,"Sector track is in");
   G__memvar_setup((void*)((long)(&p->beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"beta=",0,"Beta of the track in units of c");
   G__memvar_setup((void*)((long)(&p->vtime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vtime=",0,"vertex time of track");
   G__memvar_setup((void*)((long)(&p->sc_stat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sc_stat=",0,"status of hit matching to SC: see sc.h");
   G__memvar_setup((void*)((long)(&p->sc_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sc_id=",0,"Pointer to SCRC bank");
   G__memvar_setup((void*)((long)(&p->sc_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_time=",0,"SC calibrated time for this track (ns)");
   G__memvar_setup((void*)((long)(&p->sc_qual)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_qual=",0,"quality of match for SC");
   G__memvar_setup((void*)((long)(&p->sc_vtime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_vtime=",0,"time at vertex for SC(ns)");
   G__memvar_setup((void*)((long)(&p->sc_beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sc_beta=",0,"Beta calculated from TOF from SC");
   G__memvar_setup((void*)((long)(&p->cc_stat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_stat=",0,"status of hit matching to CC: see sc.h");
   G__memvar_setup((void*)((long)(&p->cc_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cc_id=",0,"pointer to CC01 bank");
   G__memvar_setup((void*)((long)(&p->cc_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc_time=",0,"CC calibrated time for this track (ns)");
   G__memvar_setup((void*)((long)(&p->cc_qual)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc_qual=",0,"quality of match for CC");
   G__memvar_setup((void*)((long)(&p->cc_vtime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc_vtime=",0,"time at vertex for CC(ns)");
   G__memvar_setup((void*)((long)(&p->cc_beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc_beta=",0,"Beta as calculated by the EC");
   G__memvar_setup((void*)((long)(&p->ec_stat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ec_stat=",0,"status of hit matching to ec: see sc.h");
   G__memvar_setup((void*)((long)(&p->ec_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ec_id=",0,"Pointer to ECHB bank");
   G__memvar_setup((void*)((long)(&p->ec_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_time=",0,"EC calibrated time for this track (ns)");
   G__memvar_setup((void*)((long)(&p->ec_qual)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_qual=",0,"EC quality factor");
   G__memvar_setup((void*)((long)(&p->ec_vtime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_vtime=",0,"time at vertex for EC(ns)");
   G__memvar_setup((void*)((long)(&p->ec_beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ec_beta=",0,"Beta as calculated by the EC");
   G__memvar_setup((void*)((long)(&p->st_stat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"st_stat=",0,"status of hit matching to ST");
   G__memvar_setup((void*)((long)(&p->st_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"st_id=",0,"Pointer to STR bank");
   G__memvar_setup((void*)((long)(&p->st_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"st_time=",0,"ST calibrated time for this track (ns)");
   G__memvar_setup((void*)((long)(&p->st_qual)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"st_qual=",0,"ST quality factor");
   G__memvar_setup((void*)((long)(&p->st_vtime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"st_vtime=",0,"time at vertex for ST(ns)");
   G__memvar_setup((void*)((long)(&p->st_beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"st_beta=",0,"Beta as calculated by the ST");
   G__memvar_setup((void*)((long)(&p->lac_stat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lac_stat=",0,"status of hit matching to LAC");
   G__memvar_setup((void*)((long)(&p->lac_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"lac_id=",0,"Pointer to EC1R bank");
   G__memvar_setup((void*)((long)(&p->lac_time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lac_time=",0,"LAC calibrated time for this track (ns)");
   G__memvar_setup((void*)((long)(&p->lac_qual)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lac_qual=",0,"LAC quality factor");
   G__memvar_setup((void*)((long)(&p->lac_vtime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lac_vtime=",0,"time at vertex for LAC(ns)");
   G__memvar_setup((void*)((long)(&p->lac_beta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"lac_beta=",0,"Beta as calculated by the LAC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TTBIDClassDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTTBIDClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTTBIDClass(void) {
   /* TTBIDClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass));
   G__memfunc_setup("TTBIDClass",877,G__TTBIDClassDict_183_0_1, 105, G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTBIDClass",877,G__TTBIDClassDict_183_0_2, 105, G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass), -1, 0, 1, 1, 1, 0, "U 'TTBIDClass' - 0 - TmpTBID", "copy constructor.", (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__TTBIDClassDict_183_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSec",571,G__TTBIDClassDict_183_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__TTBIDClassDict_183_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtime",805,G__TTBIDClassDict_183_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSc_stat",1009,G__TTBIDClassDict_183_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSc_id",770,G__TTBIDClassDict_183_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSc_time",996,G__TTBIDClassDict_183_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSc_qual",1000,G__TTBIDClassDict_183_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSc_vtime",1114,G__TTBIDClassDict_183_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSc_beta",977,G__TTBIDClassDict_183_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCc_stat",993,G__TTBIDClassDict_183_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCc_id",754,G__TTBIDClassDict_183_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCc_time",980,G__TTBIDClassDict_183_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCc_qual",984,G__TTBIDClassDict_183_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCc_vtime",1098,G__TTBIDClassDict_183_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCc_beta",961,G__TTBIDClassDict_183_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc_stat",995,G__TTBIDClassDict_183_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc_id",756,G__TTBIDClassDict_183_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc_time",982,G__TTBIDClassDict_183_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc_qual",986,G__TTBIDClassDict_183_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc_vtime",1100,G__TTBIDClassDict_183_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEc_beta",963,G__TTBIDClassDict_183_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSt_stat",1026,G__TTBIDClassDict_183_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSt_id",787,G__TTBIDClassDict_183_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSt_time",1013,G__TTBIDClassDict_183_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSt_qual",1017,G__TTBIDClassDict_183_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSt_vtime",1131,G__TTBIDClassDict_183_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSt_beta",994,G__TTBIDClassDict_183_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLac_stat",1099,G__TTBIDClassDict_183_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLac_id",860,G__TTBIDClassDict_183_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLac_time",1086,G__TTBIDClassDict_183_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLac_qual",1090,G__TTBIDClassDict_183_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLac_vtime",1204,G__TTBIDClassDict_183_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLac_beta",1067,G__TTBIDClassDict_183_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TTBIDClassDict_183_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", "Print info on class.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TTBIDClassDict_183_0_38, 85, G__get_linked_tagnum(&G__TTBIDClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTBIDClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TTBIDClassDict_183_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTBIDClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TTBIDClassDict_183_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTBIDClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TTBIDClassDict_183_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTBIDClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TTBIDClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TTBIDClassDict_183_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TTBIDClassDict_183_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTBIDClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TTBIDClassDict_183_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTBIDClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TTBIDClassDict_183_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTBIDClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TTBIDClassDict_183_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTBIDClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTBIDClass", 877, G__TTBIDClassDict_183_0_50, (int) ('i'), G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass), -1, 0, 1, 1, 1, 0, "u 'TTBIDClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTBIDClass", 1003, G__TTBIDClassDict_183_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TTBIDClassDict_183_0_52, (int) ('u'), G__get_linked_tagnum(&G__TTBIDClassDictLN_TTBIDClass), -1, 1, 1, 1, 1, 0, "u 'TTBIDClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTTBIDClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTTBIDClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTTBIDClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TTBIDClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTBIDClassDictLN_TTBIDClass = { "TTBIDClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTTBIDClassDict() {
  G__TTBIDClassDictLN_TClass.tagnum = -1 ;
  G__TTBIDClassDictLN_TBuffer.tagnum = -1 ;
  G__TTBIDClassDictLN_TMemberInspector.tagnum = -1 ;
  G__TTBIDClassDictLN_TObject.tagnum = -1 ;
  G__TTBIDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TTBIDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTBIDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TTBIDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTBIDClassDictLN_TTBIDClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTTBIDClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TTBIDClassDictLN_TTBIDClass),sizeof(TTBIDClass),-1,62720,"Class for accessing the TBER bank: Tracking error information.",G__setup_memvarTTBIDClass,G__setup_memfuncTTBIDClass);
}
extern "C" void G__cpp_setupTTBIDClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTTBIDClassDict()");
  G__set_cpp_environmentTTBIDClassDict();
  G__cpp_setup_tagtableTTBIDClassDict();

  G__cpp_setup_inheritanceTTBIDClassDict();

  G__cpp_setup_typetableTTBIDClassDict();

  G__cpp_setup_memvarTTBIDClassDict();

  G__cpp_setup_memfuncTTBIDClassDict();
  G__cpp_setup_globalTTBIDClassDict();
  G__cpp_setup_funcTTBIDClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTTBIDClassDict();
  return;
}
class G__cpp_setup_initTTBIDClassDict {
  public:
    G__cpp_setup_initTTBIDClassDict() { G__add_setup_func("TTBIDClassDict",(G__incsetup)(&G__cpp_setupTTBIDClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTTBIDClassDict() { G__remove_setup_func("TTBIDClassDict"); }
};
G__cpp_setup_initTTBIDClassDict G__cpp_setup_initializerTTBIDClassDict;

