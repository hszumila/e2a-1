//
// File generated by /u/apps/root/5.34.13/root/bin/rootcint at Fri Jan 20 19:15:45 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL6dITTBTRClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TTBTRClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TTBTRClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TTBTRClass(void *p = 0);
   static void *newArray_TTBTRClass(Long_t size, void *p);
   static void delete_TTBTRClass(void *p);
   static void deleteArray_TTBTRClass(void *p);
   static void destruct_TTBTRClass(void *p);
   static void streamer_TTBTRClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTBTRClass*)
   {
      ::TTBTRClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTBTRClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTBTRClass", ::TTBTRClass::Class_Version(), "./TTBTRClass.h", 11,
                  typeid(::TTBTRClass), DefineBehavior(ptr, ptr),
                  &::TTBTRClass::Dictionary, isa_proxy, 0,
                  sizeof(::TTBTRClass) );
      instance.SetNew(&new_TTBTRClass);
      instance.SetNewArray(&newArray_TTBTRClass);
      instance.SetDelete(&delete_TTBTRClass);
      instance.SetDeleteArray(&deleteArray_TTBTRClass);
      instance.SetDestructor(&destruct_TTBTRClass);
      instance.SetStreamerFunc(&streamer_TTBTRClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTBTRClass*)
   {
      return GenerateInitInstanceLocal((::TTBTRClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTBTRClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TTBTRClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTBTRClass::Class_Name()
{
   return "TTBTRClass";
}

//______________________________________________________________________________
const char *TTBTRClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTBTRClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTBTRClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTBTRClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTBTRClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTBTRClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTBTRClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTBTRClass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TTBTRClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTBTRClass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> x;
      R__b >> y;
      R__b >> z;
      R__b >> px;
      R__b >> py;
      R__b >> pz;
      R__b >> q;
      R__b >> chi2;
      R__b >> itr_sec;
      R__b >> itr_hbt;
      R__b.CheckByteCount(R__s, R__c, TTBTRClass::IsA());
   } else {
      R__c = R__b.WriteVersion(TTBTRClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << x;
      R__b << y;
      R__b << z;
      R__b << px;
      R__b << py;
      R__b << pz;
      R__b << q;
      R__b << chi2;
      R__b << itr_sec;
      R__b << itr_hbt;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TTBTRClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TTBTRClass.
      TClass *R__cl = ::TTBTRClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q", &q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itr_sec", &itr_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itr_hbt", &itr_hbt);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTBTRClass(void *p) {
      return  p ? new(p) ::TTBTRClass : new ::TTBTRClass;
   }
   static void *newArray_TTBTRClass(Long_t nElements, void *p) {
      return p ? new(p) ::TTBTRClass[nElements] : new ::TTBTRClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTBTRClass(void *p) {
      delete ((::TTBTRClass*)p);
   }
   static void deleteArray_TTBTRClass(void *p) {
      delete [] ((::TTBTRClass*)p);
   }
   static void destruct_TTBTRClass(void *p) {
      typedef ::TTBTRClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TTBTRClass(TBuffer &buf, void *obj) {
      ((::TTBTRClass*)obj)->::TTBTRClass::Streamer(buf);
   }
} // end of namespace ROOT for class ::TTBTRClass

/********************************************************
* dicts/Linux64RHEL6/TTBTRClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTTBTRClassDict();

extern "C" void G__set_cpp_environmentTTBTRClassDict() {
  G__cpp_reset_tagtableTTBTRClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTTBTRClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TTBTRClass */
static int G__TTBTRClassDict_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTBTRClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTBTRClass[n];
     } else {
       p = new((void*) gvp) TTBTRClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTBTRClass;
     } else {
       p = new((void*) gvp) TTBTRClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTBTRClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTBTRClass((TTBTRClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTBTRClass((TTBTRClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TTBTRClass*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBTRClass*) G__getstructoffset())->GetItr_sec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TTBTRClass*) G__getstructoffset())->GetItr_hbt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTBTRClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTBTRClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTBTRClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTBTRClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTBTRClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTBTRClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTBTRClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTBTRClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTBTRClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTBTRClassDict_217_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTBTRClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TTBTRClassDict_217_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTBTRClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTBTRClass(*(TTBTRClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTBTRClass G__TTTBTRClass;
static int G__TTBTRClassDict_217_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTBTRClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTBTRClass*) (soff+(sizeof(TTBTRClass)*i)))->~G__TTTBTRClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTBTRClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTBTRClass*) (soff))->~G__TTTBTRClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TTBTRClassDict_217_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTBTRClass* dest = (TTBTRClass*) G__getstructoffset();
   *dest = *(TTBTRClass*) libp->para[0].ref;
   const TTBTRClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TTBTRClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTTBTRClassDict {
 public:
  G__Sizep2memfuncTTBTRClassDict(): p(&G__Sizep2memfuncTTBTRClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTTBTRClassDict::*p)();
};

size_t G__get_sizep2memfuncTTBTRClassDict()
{
  G__Sizep2memfuncTTBTRClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTTBTRClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass))) {
     TTBTRClass *G__Lderived;
     G__Lderived=(TTBTRClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass),G__get_linked_tagnum(&G__TTBTRClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTTBTRClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBTRClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBTRClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBTRClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTBTRClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TTBTRClassDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TTBTRClass */
static void G__setup_memvarTTBTRClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass));
   { TTBTRClass *p; p=(TTBTRClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x=",0,"x");
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y=",0,"y 'Vertex' position {x,y,z}");
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z=",0,"z");
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"px=",0,"Px");
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"py=",0,"Py  momentum at 'vertex' {Px,Py,Pz}");
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pz=",0,"Pz");
   G__memvar_setup((void*)((long)(&p->q)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"q=",0,"charge   (straight tracks: set q=0.)");
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"chi2=",0,"Chisquare for this Track");
   G__memvar_setup((void*)((long)(&p->itr_sec)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"itr_sec=",0,"Trackno_in_Sector + Sector*100");
   G__memvar_setup((void*)((long)(&p->itr_hbt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"itr_hbt=",0,"Trackno in HBTR for this track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TTBTRClassDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTTBTRClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTTBTRClass(void) {
   /* TTBTRClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass));
   G__memfunc_setup("TTBTRClass",902,G__TTBTRClassDict_217_0_1, 105, G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTBTRClass",902,G__TTBTRClassDict_217_0_2, 105, G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass), -1, 0, 1, 1, 1, 0, "U 'TTBTRClass' - 0 - TmpTBTR", "copy constructor.", (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__TTBTRClassDict_217_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__TTBTRClassDict_217_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__TTBTRClassDict_217_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__TTBTRClassDict_217_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__TTBTRClassDict_217_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__TTBTRClassDict_217_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__TTBTRClassDict_217_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__TTBTRClassDict_217_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetItr_sec",1001,G__TTBTRClassDict_217_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetItr_hbt",1004,G__TTBTRClassDict_217_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TTBTRClassDict_217_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "Print info on class.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TTBTRClassDict_217_0_14, 85, G__get_linked_tagnum(&G__TTBTRClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTBTRClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TTBTRClassDict_217_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTBTRClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TTBTRClassDict_217_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTBTRClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TTBTRClassDict_217_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTBTRClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TTBTRClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TTBTRClassDict_217_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TTBTRClassDict_217_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTBTRClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TTBTRClassDict_217_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTBTRClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TTBTRClassDict_217_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTBTRClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TTBTRClassDict_217_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTBTRClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTBTRClass", 902, G__TTBTRClassDict_217_0_26, (int) ('i'), G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass), -1, 0, 1, 1, 1, 0, "u 'TTBTRClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTBTRClass", 1028, G__TTBTRClassDict_217_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TTBTRClassDict_217_0_28, (int) ('u'), G__get_linked_tagnum(&G__TTBTRClassDictLN_TTBTRClass), -1, 1, 1, 1, 1, 0, "u 'TTBTRClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTTBTRClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTTBTRClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTTBTRClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TTBTRClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TTBTRClassDictLN_TTBTRClass = { "TTBTRClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTTBTRClassDict() {
  G__TTBTRClassDictLN_TClass.tagnum = -1 ;
  G__TTBTRClassDictLN_TBuffer.tagnum = -1 ;
  G__TTBTRClassDictLN_TMemberInspector.tagnum = -1 ;
  G__TTBTRClassDictLN_TObject.tagnum = -1 ;
  G__TTBTRClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TTBTRClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTBTRClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TTBTRClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TTBTRClassDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TTBTRClassDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TTBTRClassDictLN_TTBTRClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTTBTRClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TTBTRClassDictLN_TTBTRClass),sizeof(TTBTRClass),-1,62720,"Class for accessing the TBER bank: Tracking error information.",G__setup_memvarTTBTRClass,G__setup_memfuncTTBTRClass);
}
extern "C" void G__cpp_setupTTBTRClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTTBTRClassDict()");
  G__set_cpp_environmentTTBTRClassDict();
  G__cpp_setup_tagtableTTBTRClassDict();

  G__cpp_setup_inheritanceTTBTRClassDict();

  G__cpp_setup_typetableTTBTRClassDict();

  G__cpp_setup_memvarTTBTRClassDict();

  G__cpp_setup_memfuncTTBTRClassDict();
  G__cpp_setup_globalTTBTRClassDict();
  G__cpp_setup_funcTTBTRClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTTBTRClassDict();
  return;
}
class G__cpp_setup_initTTBTRClassDict {
  public:
    G__cpp_setup_initTTBTRClassDict() { G__add_setup_func("TTBTRClassDict",(G__incsetup)(&G__cpp_setupTTBTRClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTTBTRClassDict() { G__remove_setup_func("TTBTRClassDict"); }
};
G__cpp_setup_initTTBTRClassDict G__cpp_setup_initializerTTBTRClassDict;

