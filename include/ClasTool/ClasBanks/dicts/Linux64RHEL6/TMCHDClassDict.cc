//
// File generated by /u/apps/root/5.34.13/root/bin/rootcint at Fri Jan 20 19:15:35 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL6dITMCHDClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TMCHDClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TMCHDClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMCHDClass(void *p = 0);
   static void *newArray_TMCHDClass(Long_t size, void *p);
   static void delete_TMCHDClass(void *p);
   static void deleteArray_TMCHDClass(void *p);
   static void destruct_TMCHDClass(void *p);
   static void streamer_TMCHDClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TMCHDClass*)
   {
      ::TMCHDClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMCHDClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMCHDClass", ::TMCHDClass::Class_Version(), "./TMCHDClass.h", 17,
                  typeid(::TMCHDClass), DefineBehavior(ptr, ptr),
                  &::TMCHDClass::Dictionary, isa_proxy, 0,
                  sizeof(::TMCHDClass) );
      instance.SetNew(&new_TMCHDClass);
      instance.SetNewArray(&newArray_TMCHDClass);
      instance.SetDelete(&delete_TMCHDClass);
      instance.SetDeleteArray(&deleteArray_TMCHDClass);
      instance.SetDestructor(&destruct_TMCHDClass);
      instance.SetStreamerFunc(&streamer_TMCHDClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TMCHDClass*)
   {
      return GenerateInitInstanceLocal((::TMCHDClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMCHDClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TMCHDClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMCHDClass::Class_Name()
{
   return "TMCHDClass";
}

//______________________________________________________________________________
const char *TMCHDClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCHDClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMCHDClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TMCHDClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMCHDClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCHDClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMCHDClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TMCHDClass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TMCHDClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMCHDClass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> Nrun;
      R__b >> Nevent;
      R__b >> Time;
      R__b >> Type;
      R__b >> ReacType;
      R__b >> Weight;
      Photon.Streamer(R__b);
      Target.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TMCHDClass::IsA());
   } else {
      R__c = R__b.WriteVersion(TMCHDClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << Nrun;
      R__b << Nevent;
      R__b << Time;
      R__b << Type;
      R__b << ReacType;
      R__b << Weight;
      Photon.Streamer(R__b);
      Target.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TMCHDClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMCHDClass.
      TClass *R__cl = ::TMCHDClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nrun", &Nrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nevent", &Nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Type", &Type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ReacType", &ReacType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Weight", &Weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Photon", &Photon);
      R__insp.InspectMember(Photon, "Photon.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Target", &Target);
      R__insp.InspectMember(Target, "Target.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TMCHDClass(void *p) {
      return  p ? new(p) ::TMCHDClass : new ::TMCHDClass;
   }
   static void *newArray_TMCHDClass(Long_t nElements, void *p) {
      return p ? new(p) ::TMCHDClass[nElements] : new ::TMCHDClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMCHDClass(void *p) {
      delete ((::TMCHDClass*)p);
   }
   static void deleteArray_TMCHDClass(void *p) {
      delete [] ((::TMCHDClass*)p);
   }
   static void destruct_TMCHDClass(void *p) {
      typedef ::TMCHDClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TMCHDClass(TBuffer &buf, void *obj) {
      ((::TMCHDClass*)obj)->::TMCHDClass::Streamer(buf);
   }
} // end of namespace ROOT for class ::TMCHDClass

/********************************************************
* dicts/Linux64RHEL6/TMCHDClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTMCHDClassDict();

extern "C" void G__set_cpp_environmentTMCHDClassDict() {
  G__cpp_reset_tagtableTMCHDClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTMCHDClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TMCHDClass */
static int G__TMCHDClassDict_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCHDClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCHDClass[n];
     } else {
       p = new((void*) gvp) TMCHDClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMCHDClass;
     } else {
       p = new((void*) gvp) TMCHDClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCHDClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMCHDClass((TMCHDClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMCHDClass((TMCHDClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCHDClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCHDClass*) G__getstructoffset())->GetNrun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCHDClass*) G__getstructoffset())->GetNevent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCHDClass*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCHDClass*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TMCHDClass*) G__getstructoffset())->GetReacType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TMCHDClass*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TMCHDClass*) G__getstructoffset())->GetPhoton();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((TMCHDClass*) G__getstructoffset())->GetTarget();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMCHDClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCHDClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMCHDClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMCHDClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMCHDClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCHDClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCHDClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMCHDClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TMCHDClassDict_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMCHDClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TMCHDClassDict_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMCHDClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMCHDClass(*(TMCHDClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMCHDClass G__TTMCHDClass;
static int G__TMCHDClassDict_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMCHDClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMCHDClass*) (soff+(sizeof(TMCHDClass)*i)))->~G__TTMCHDClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMCHDClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMCHDClass*) (soff))->~G__TTMCHDClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TMCHDClassDict_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMCHDClass* dest = (TMCHDClass*) G__getstructoffset();
   *dest = *(TMCHDClass*) libp->para[0].ref;
   const TMCHDClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TMCHDClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTMCHDClassDict {
 public:
  G__Sizep2memfuncTMCHDClassDict(): p(&G__Sizep2memfuncTMCHDClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTMCHDClassDict::*p)();
};

size_t G__get_sizep2memfuncTMCHDClassDict()
{
  G__Sizep2memfuncTMCHDClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTMCHDClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass))) {
     TMCHDClass *G__Lderived;
     G__Lderived=(TMCHDClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass),G__get_linked_tagnum(&G__TMCHDClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTMCHDClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMCHDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMCHDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMCHDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TMCHDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TMCHDClassDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TMCHDClass */
static void G__setup_memvarTMCHDClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass));
   { TMCHDClass *p; p=(TMCHDClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Nrun)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Nrun=",0,"Run number for this run");
   G__memvar_setup((void*)((long)(&p->Nevent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Nevent=",0,"Event number for this run, starts with 1, increases with one for BOS each event in BOS file.");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Time=",0,"Event Time as UNIX time.");
   G__memvar_setup((void*)((long)(&p->Type)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Type=",0,"Event Type: 1-9 Physics event (2= sync, 4=level2 late fail) 10 Scaler event. < 0 Monte Carlo");
   G__memvar_setup((void*)((long)(&p->ReacType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ReacType=",0,"Reaction Type ");
   G__memvar_setup((void*)((long)(&p->Weight)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Weight=",0,"event Weight");
   G__memvar_setup((void*)((long)(&p->Photon)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TMCHDClassDictLN_TLorentzVector),-1,-1,1,"Photon=",0,"Photon (real or virtual) vector ");
   G__memvar_setup((void*)((long)(&p->Target)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TMCHDClassDictLN_TLorentzVector),-1,-1,1,"Target=",0,"Target vector ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TMCHDClassDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTMCHDClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTMCHDClass(void) {
   /* TMCHDClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass));
   G__memfunc_setup("TMCHDClass",870,G__TMCHDClassDict_225_0_1, 105, G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMCHDClass",870,G__TMCHDClassDict_225_0_2, 105, G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass), -1, 0, 1, 1, 1, 0, "U 'TMCHDClass' - 0 - TmpMVHD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TMCHDClassDict_225_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrun",707,G__TMCHDClassDict_225_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNevent",912,G__TMCHDClassDict_225_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__TMCHDClassDict_225_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__TMCHDClassDict_225_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReacType",1085,G__TMCHDClassDict_225_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__TMCHDClassDict_225_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhoton",920,G__TMCHDClassDict_225_0_10, 117, G__get_linked_tagnum(&G__TMCHDClassDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__TMCHDClassDict_225_0_11, 117, G__get_linked_tagnum(&G__TMCHDClassDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TMCHDClassDict_225_0_12, 85, G__get_linked_tagnum(&G__TMCHDClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMCHDClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TMCHDClassDict_225_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCHDClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TMCHDClassDict_225_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMCHDClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TMCHDClassDict_225_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMCHDClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TMCHDClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TMCHDClassDict_225_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TMCHDClassDict_225_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCHDClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TMCHDClassDict_225_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCHDClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TMCHDClassDict_225_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMCHDClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TMCHDClassDict_225_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMCHDClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMCHDClass", 870, G__TMCHDClassDict_225_0_24, (int) ('i'), G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass), -1, 0, 1, 1, 1, 0, "u 'TMCHDClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMCHDClass", 996, G__TMCHDClassDict_225_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TMCHDClassDict_225_0_26, (int) ('u'), G__get_linked_tagnum(&G__TMCHDClassDictLN_TMCHDClass), -1, 1, 1, 1, 1, 0, "u 'TMCHDClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTMCHDClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTMCHDClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTMCHDClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TMCHDClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__TMCHDClassDictLN_TMCHDClass = { "TMCHDClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTMCHDClassDict() {
  G__TMCHDClassDictLN_TClass.tagnum = -1 ;
  G__TMCHDClassDictLN_TBuffer.tagnum = -1 ;
  G__TMCHDClassDictLN_TMemberInspector.tagnum = -1 ;
  G__TMCHDClassDictLN_TObject.tagnum = -1 ;
  G__TMCHDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TMCHDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TMCHDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TMCHDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TMCHDClassDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TMCHDClassDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TMCHDClassDictLN_TLorentzVector.tagnum = -1 ;
  G__TMCHDClassDictLN_TMCHDClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTMCHDClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TMCHDClassDictLN_TMCHDClass),sizeof(TMCHDClass),-1,62720,"Header information for event",G__setup_memvarTMCHDClass,G__setup_memfuncTMCHDClass);
}
extern "C" void G__cpp_setupTMCHDClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTMCHDClassDict()");
  G__set_cpp_environmentTMCHDClassDict();
  G__cpp_setup_tagtableTMCHDClassDict();

  G__cpp_setup_inheritanceTMCHDClassDict();

  G__cpp_setup_typetableTMCHDClassDict();

  G__cpp_setup_memvarTMCHDClassDict();

  G__cpp_setup_memfuncTMCHDClassDict();
  G__cpp_setup_globalTMCHDClassDict();
  G__cpp_setup_funcTMCHDClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTMCHDClassDict();
  return;
}
class G__cpp_setup_initTMCHDClassDict {
  public:
    G__cpp_setup_initTMCHDClassDict() { G__add_setup_func("TMCHDClassDict",(G__incsetup)(&G__cpp_setupTMCHDClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTMCHDClassDict() { G__remove_setup_func("TMCHDClassDict"); }
};
G__cpp_setup_initTMCHDClassDict G__cpp_setup_initializerTMCHDClassDict;

