//
// File generated by /u/apps/root/5.34.13/root/bin/rootcint at Fri Jan 20 19:15:34 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dictsdILinux64RHEL6dITLCPBClassDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TLCPBClassDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TLCPBClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TLCPBClass(void *p = 0);
   static void *newArray_TLCPBClass(Long_t size, void *p);
   static void delete_TLCPBClass(void *p);
   static void deleteArray_TLCPBClass(void *p);
   static void destruct_TLCPBClass(void *p);
   static void streamer_TLCPBClass(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TLCPBClass*)
   {
      ::TLCPBClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TLCPBClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TLCPBClass", ::TLCPBClass::Class_Version(), "./TLCPBClass.h", 19,
                  typeid(::TLCPBClass), DefineBehavior(ptr, ptr),
                  &::TLCPBClass::Dictionary, isa_proxy, 0,
                  sizeof(::TLCPBClass) );
      instance.SetNew(&new_TLCPBClass);
      instance.SetNewArray(&newArray_TLCPBClass);
      instance.SetDelete(&delete_TLCPBClass);
      instance.SetDeleteArray(&deleteArray_TLCPBClass);
      instance.SetDestructor(&destruct_TLCPBClass);
      instance.SetStreamerFunc(&streamer_TLCPBClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TLCPBClass*)
   {
      return GenerateInitInstanceLocal((::TLCPBClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TLCPBClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TLCPBClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLCPBClass::Class_Name()
{
   return "TLCPBClass";
}

//______________________________________________________________________________
const char *TLCPBClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLCPBClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLCPBClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TLCPBClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLCPBClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLCPBClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLCPBClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TLCPBClass*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TLCPBClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class TLCPBClass.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> Scht;
      R__b >> Etot;
      R__b >> Time;
      R__b >> Path;
      R__b >> X;
      R__b >> Y;
      R__b >> Z;
      R__b >> Chi2lc;
      R__b >> Status;
      R__b >> Ein;
      R__b.CheckByteCount(R__s, R__c, TLCPBClass::IsA());
   } else {
      R__c = R__b.WriteVersion(TLCPBClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << Scht;
      R__b << Etot;
      R__b << Time;
      R__b << Path;
      R__b << X;
      R__b << Y;
      R__b << Z;
      R__b << Chi2lc;
      R__b << Status;
      R__b << Ein;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TLCPBClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TLCPBClass.
      TClass *R__cl = ::TLCPBClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Scht", &Scht);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Etot", &Etot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Path", &Path);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y", &Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z", &Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Chi2lc", &Chi2lc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ein", &Ein);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TLCPBClass(void *p) {
      return  p ? new(p) ::TLCPBClass : new ::TLCPBClass;
   }
   static void *newArray_TLCPBClass(Long_t nElements, void *p) {
      return p ? new(p) ::TLCPBClass[nElements] : new ::TLCPBClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_TLCPBClass(void *p) {
      delete ((::TLCPBClass*)p);
   }
   static void deleteArray_TLCPBClass(void *p) {
      delete [] ((::TLCPBClass*)p);
   }
   static void destruct_TLCPBClass(void *p) {
      typedef ::TLCPBClass current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TLCPBClass(TBuffer &buf, void *obj) {
      ((::TLCPBClass*)obj)->::TLCPBClass::Streamer(buf);
   }
} // end of namespace ROOT for class ::TLCPBClass

/********************************************************
* dicts/Linux64RHEL6/TLCPBClassDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTLCPBClassDict();

extern "C" void G__set_cpp_environmentTLCPBClassDict() {
  G__cpp_reset_tagtableTLCPBClassDict();
}
#include <new>
extern "C" int G__cpp_dllrevTLCPBClassDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TLCPBClass */
static int G__TLCPBClassDict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLCPBClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLCPBClass[n];
     } else {
       p = new((void*) gvp) TLCPBClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TLCPBClass;
     } else {
       p = new((void*) gvp) TLCPBClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLCPBClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TLCPBClass((TLCPBClass*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TLCPBClass((TLCPBClass*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLCPBClass*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TLCPBClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLCPBClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TLCPBClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TLCPBClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TLCPBClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLCPBClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLCPBClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TLCPBClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TLCPBClassDict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TLCPBClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TLCPBClassDict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TLCPBClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TLCPBClass(*(TLCPBClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TLCPBClass G__TTLCPBClass;
static int G__TLCPBClassDict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TLCPBClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TLCPBClass*) (soff+(sizeof(TLCPBClass)*i)))->~G__TTLCPBClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TLCPBClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TLCPBClass*) (soff))->~G__TTLCPBClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TLCPBClassDict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TLCPBClass* dest = (TLCPBClass*) G__getstructoffset();
   *dest = *(TLCPBClass*) libp->para[0].ref;
   const TLCPBClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TLCPBClass */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTLCPBClassDict {
 public:
  G__Sizep2memfuncTLCPBClassDict(): p(&G__Sizep2memfuncTLCPBClassDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTLCPBClassDict::*p)();
};

size_t G__get_sizep2memfuncTLCPBClassDict()
{
  G__Sizep2memfuncTLCPBClassDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTLCPBClassDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass))) {
     TLCPBClass *G__Lderived;
     G__Lderived=(TLCPBClass*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass),G__get_linked_tagnum(&G__TLCPBClassDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTLCPBClassDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TLCPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TLCPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TLCPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TLCPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TLCPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TLCPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TLCPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TLCPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TLCPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TLCPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TLCPBClass */
static void G__setup_memvarTLCPBClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass));
   { TLCPBClass *p; p=(TLCPBClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Scht)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Scht=",0,"100*sector+Hit_ID in EC1R");
   G__memvar_setup((void*)((long)(&p->Etot)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Etot=",0,"Reconstructed total energy ");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Time=",0,"Flight time relative to the evnt start time");
   G__memvar_setup((void*)((long)(&p->Path)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Path=",0,"Path lenght from target");
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X=",0,"x coordinate of the hit");
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Y=",0,"y coordinate of the hit");
   G__memvar_setup((void*)((long)(&p->Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Z=",0,"z coordinate of the hit");
   G__memvar_setup((void*)((long)(&p->Chi2lc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Chi2lc=",0,"Quality measure of geometrical matching");
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Status=",0,"Status word");
   G__memvar_setup((void*)((long)(&p->Ein)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Ein=",0,"Reconstructed energy in the inner part");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TLCPBClassDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTLCPBClassDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTLCPBClass(void) {
   /* TLCPBClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass));
   G__memfunc_setup("TLCPBClass",875,G__TLCPBClassDict_183_0_1, 105, G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLCPBClass",875,G__TLCPBClassDict_183_0_2, 105, G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass), -1, 0, 1, 1, 1, 0, "U 'TLCPBClass' - 0 - TmpLCPB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TLCPBClassDict_183_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TLCPBClassDict_183_0_4, 85, G__get_linked_tagnum(&G__TLCPBClassDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TLCPBClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TLCPBClassDict_183_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLCPBClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TLCPBClassDict_183_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TLCPBClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TLCPBClassDict_183_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TLCPBClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TLCPBClassDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TLCPBClassDict_183_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TLCPBClassDict_183_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLCPBClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TLCPBClassDict_183_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLCPBClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TLCPBClassDict_183_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TLCPBClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TLCPBClassDict_183_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TLCPBClass::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TLCPBClass", 875, G__TLCPBClassDict_183_0_16, (int) ('i'), G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass), -1, 0, 1, 1, 1, 0, "u 'TLCPBClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TLCPBClass", 1001, G__TLCPBClassDict_183_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TLCPBClassDict_183_0_18, (int) ('u'), G__get_linked_tagnum(&G__TLCPBClassDictLN_TLCPBClass), -1, 1, 1, 1, 1, 0, "u 'TLCPBClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTLCPBClassDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTLCPBClassDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTLCPBClassDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TLCPBClassDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TLCPBClassDictLN_TLCPBClass = { "TLCPBClass" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTLCPBClassDict() {
  G__TLCPBClassDictLN_TClass.tagnum = -1 ;
  G__TLCPBClassDictLN_TBuffer.tagnum = -1 ;
  G__TLCPBClassDictLN_TMemberInspector.tagnum = -1 ;
  G__TLCPBClassDictLN_TObject.tagnum = -1 ;
  G__TLCPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TLCPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TLCPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TLCPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TLCPBClassDictLN_TLCPBClass.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTLCPBClassDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TLCPBClassDictLN_TLCPBClass),sizeof(TLCPBClass),-1,62720,"Class for accessing the LCPB Bank (Large Angle Calorimeter)",G__setup_memvarTLCPBClass,G__setup_memfuncTLCPBClass);
}
extern "C" void G__cpp_setupTLCPBClassDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTLCPBClassDict()");
  G__set_cpp_environmentTLCPBClassDict();
  G__cpp_setup_tagtableTLCPBClassDict();

  G__cpp_setup_inheritanceTLCPBClassDict();

  G__cpp_setup_typetableTLCPBClassDict();

  G__cpp_setup_memvarTLCPBClassDict();

  G__cpp_setup_memfuncTLCPBClassDict();
  G__cpp_setup_globalTLCPBClassDict();
  G__cpp_setup_funcTLCPBClassDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTLCPBClassDict();
  return;
}
class G__cpp_setup_initTLCPBClassDict {
  public:
    G__cpp_setup_initTLCPBClassDict() { G__add_setup_func("TLCPBClassDict",(G__incsetup)(&G__cpp_setupTLCPBClassDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTLCPBClassDict() { G__remove_setup_func("TLCPBClassDict"); }
};
G__cpp_setup_initTLCPBClassDict G__cpp_setup_initializerTLCPBClassDict;

